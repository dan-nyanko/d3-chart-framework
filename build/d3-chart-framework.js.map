{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap cba9a3278397c605c6c6","webpack:///./src/index.js","webpack:///./src/Axes.js","webpack:///./src/Grid.js","webpack:///external \"d3\"","webpack:///external \"underscore\"","webpack:///external \"moment\"","webpack:///./src/Errors.js","webpack:///./src/groups/Group.js","webpack:///./src/nodes/Node.js","webpack:///./src/groups/BarGroup.js","webpack:///./src/groups/LineGroup.js","webpack:///./src/groups/NodeGroup.js","webpack:///./src/nodes/BarNode.js","webpack:///./src/nodes/LineNode.js","webpack:///./src/nodes/RectNode.js","webpack:///./src/nodes/SegmentNode.js","webpack:///./src/Chart.js","webpack:///./src/Tooltip.js","webpack:///./src/Zoom.js","webpack:///./src/BarChart.js","webpack:///./src/ScatterPlot.js","webpack:///./src/LineChart.js"],"names":["default","InvalidNodeError","InvalidGroupError","d3","require","_","moment","getDatetimeUnit","min","max","diff","unit","Axes","chart","options","x","title","type","y","grid","filter","useAutoPadding","defaultMinMax","draw","xDomain","yDomain","xScale","scaleTime","domain","range","getWidth","nice","scaleBand","rangeRound","padding","scaleLinear","xAxis","axisBottom","scale","ticks","tickFormat","timeFormat","formatDate","xGroup","container","append","attr","margins","left","getHeight","call","selectAll","style","yScale","yAxis","axisLeft","yGroup","xLabel","width","right","bottom","text","yLabel","height","top","minMax","calcMinMax","removeFilter","addFilter","d","x1","Date","getTime","x2","y1","y2","hasOwnProperty","Math","floor","data","shouldSetDomain","remove","setDomain","shouldFilterDomain","getGroupsNodes","length","xMin","xMax","pluck","minDatetime","maxDatetime","isNaN","minNumeric","maxNumeric","yMin","yMax","zoomArea","trans","transition","duration","asDays","m","l","String","split","p","pow","ceil","add","valueOf","subtract","module","exports","Grid","axes","plot","init","xGrid","tickSize","insert","yGrid","message","message_","Error","genId","prefix","random","toString","substr","Group","id","onEnter","bind","onUpdate","onExit","nodes_","Object","values","node","group","select","document","createElementNS","namespaces","svg","update","removeLayer","nodes","Node","meta","o","BarGroup","filtered","applyFilters","getNodes","enter","detached","each","exit","LineGroup","s","w","defaultGenerator","line","generator","cmp","a","b","sort","path","empty","datum","NodeGroup","BarNode","fill","opacity","rect","bandwidth","getFill","on","tooltip","mouseover","event","pageX","pageY","mouseout","LineNode","radius","circle","MINIMUM_MARKER_WIDTH","MINIMUM_MARKER_HEIGHT","RectNode","MINIMUM_LINE_STROKE","MINIMUM_CIRCLE_RADIUS","MINIMUM_LINE_THRESHOLD","SegmentNode","orderedPair","linePairs","lineDistance","distance","totalRange","linePercentage","startPoint","filteredOrderedPair","start","endPoint","end","pairs","sqrt","abs","segments","groups","segmentsByHeightAndCumulative","groupBy","segment","c","cumulative","keys","forEach","key","i","points","groupName","lastIdx","lastPoint","push","MINIMUM_CHART_HEIGHT","Chart","drawn","filters","groups_","setDimensions","root","containerID","viewBoxWidth","viewBoxHeight","svgContainerClass","zoomEnabled","zoom","getElementById","offsetWidth","Array","mergeGroups","getGroupsSize","showWarn","defaultGroup","size","removeWarn","filters_","valid","keysLen","f","warn","resizeHandler","shouldFilter","getGroups","reduce","prev","nextObj","assign","_domain","prevArr","concat","name","fn","reset","Tooltip","tooltipOpts","template","element","html","box","getBoundingClientRect","window","innerWidth","MINIMUM_ZOOM_THRESHOLD","Zoom","bandPos","drag","zoomGroup","zoomBand","zoomOverlay","isZoomed","self","pos","mouse","dragStart","ondrag","zoomX","zoomY","ondragend","invert","BarChart","resizeEnabled","resize","debounce","addEventListener","find","g","addNode","notMerged","addedNewGroup","k","idx","addGroup","indexOf","splice","n","removeGroup","removeEventListener","ScatterPlot","initialized","LineChart"],"mappings":"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","file":"d3-chart-framework.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"), require(\"underscore\"), require(\"moment\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"d3-chart-framework\", [\"d3\", \"underscore\", \"moment\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"d3-chart-framework\"] = factory(require(\"d3\"), require(\"underscore\"), require(\"moment\"));\n\telse\n\t\troot[\"d3-chart-framework\"] = factory(root[\"d3\"], root[\"underscore\"], root[\"moment\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cba9a3278397c605c6c6","export { default as Axes } from './Axes';\nexport { InvalidNodeError, InvalidGroupError } from './Errors';\nexport { default as Grid } from './Grid';\nexport { default as Group } from './groups/Group';\nexport { default as BarGroup } from './groups/BarGroup';\nexport { default as LineGroup } from './groups/LineGroup';\nexport { default as NodeGroup } from './groups/NodeGroup';\nexport { default as Node } from './nodes/Node';\nexport { default as BarNode } from './nodes/BarNode';\nexport { default as LineNode } from './nodes/LineNode';\nexport { default as RectNode } from './nodes/RectNode';\nexport { default as SegmentNode } from './nodes/SegmentNode';\nexport { default as Chart } from './Chart';\nexport { default as BarChart } from './BarChart';\nexport { default as ScatterPlot } from './ScatterPlot';\nexport { default as LineChart } from './LineChart';\nexport { default as Tooltip } from './Tooltip';\nexport { default as Zoom } from './Zoom';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","const d3 = require('d3');\nconst _ = require('underscore');\nconst moment = require('moment');\n\nimport Grid from './Grid';\n\n/**\n * getDatetimeUnit - determine the unit of time for padding the axis\n *\n * @param {object} min, the min moment datetime object\n * @param {object} max, the max moment datetime object\n * @return {string} the datetime unit {day, week, month}\n */\nfunction getDatetimeUnit(min, max) {\n  const diff = max.diff(min, 'days');\n  let unit = 'month';\n  if (diff <= 14) {\n    unit = 'day';\n  } else if (diff > 14 && diff <= 183) {\n    unit = 'week';\n  }\n  return unit;\n}\n\nclass Axes {\n  /**\n   * Axes\n   * constructs 2d cartesian axes, appends to the container SVG element of the chart\n   *\n   * @param {object} chart - the chart to append the axis\n   * @param {object} options - the properties for the axis\n   * @param {boolean} grid - should the grid be displayed?\n   * X axis properties\n   * @param {object} options.axes.x - the properties for x axis\n   * @param {string} options.axes.x.title - the title of the x axis\n   * @param {string} options.axes.x.type - the datatype of the x axis {numeric, datetime}\n   * Y axis properties\n   * @param {object} options.axes.y - the properties for y axis\n   * @param {string} options.axes.y.title - the title of the y axis\n   * @param {string} options.axes.y.type - the datatype of the y axis {numeric, datetime}\n   * @returns {object} this - returns self\n   * @example usage:\n   *  with an instance of a chart:\n   ```\n   axes = new Axes(plot, {\n     axes: {\n       grid: true,\n       x: {\n         title: 'Time',\n         type: 'datetime',\n         minMax: [1443371126, 1474993537]\n       },\n       y: {\n         title: 'Incidents',\n         type: 'numeric',\n         minMax: [0, 100]\n       },\n     }\n   })\n   ```\n   */\n  constructor(chart, options) {\n    this.chart = chart;\n    this.options = options || {x: {title: 'x', type: 'numeric'}, y: {title: 'y', type: 'numeric'}, grid: true, filter: true};\n    this.useAutoPadding = options.useAutoPadding || false;\n    this.defaultMinMax = [[0, 0], [0, 0]];\n    this.draw();\n  }\n\n  /**\n   * init - initialize the plot x,y axes\n   *\n   * @param {array=} xDomain - the zoom xDomain or undefined\n   * @param {array=} yDomain - the zoom yDomain or undefined\n   */\n  draw(xDomain, yDomain) {\n    if (this.options.x.type === 'datetime') {\n      if (xDomain) {\n        this.xScale = d3.scaleTime().domain(xDomain).range([0, this.chart.getWidth()]).nice();\n      } else {\n        this.xScale = d3.scaleTime().domain(this.defaultMinMax[0]).range([0, this.chart.getWidth()]).nice();\n      }\n    } else if (this.options.x.type === 'band') {\n      if (xDomain) {\n        this.xScale = d3.scaleBand().domain(xDomain).rangeRound([0, this.chart.getWidth()]).padding(0.1);\n      } else {\n        this.xScale = d3.scaleBand().domain(['']).rangeRound([0, this.chart.getWidth()]).padding(0.1);\n      }\n    } else {\n      if (xDomain) {\n        this.xScale = d3.scaleLinear().domain(xDomain).range([0, this.chart.getWidth()]);\n      } else {\n        this.xScale = d3.scaleLinear().domain(this.defaultMinMax[0]).range([0, this.chart.getWidth()]);\n      }\n    }\n    if (this.options.x.type === 'datetime') {\n      this.xAxis = d3.axisBottom().scale(this.xScale).ticks(10).tickFormat(d3.timeFormat(this.formatDate()));\n    } else if (this.options.x.type === 'band') {\n      this.xAxis = d3.axisBottom().scale(this.xScale);\n    } else {\n      this.xAxis = d3.axisBottom().scale(this.xScale).ticks(10);\n    }\n    if (this.options.x.type === 'datetime') {\n      this.xGroup = this.chart.container.append('g').attr('class', 'x d3cf-axis').attr('transform', `translate(${this.chart.margins.left}, ${this.chart.getHeight()})`).call(this.xAxis);\n      this.xGroup.selectAll('text').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em').attr('transform', () => {\n        return 'rotate(-65)';\n      });\n    } else {\n      this.xGroup = this.chart.container.append('g').attr('class', 'x d3cf-axis').attr('transform', `translate(${this.chart.margins.left}, ${this.chart.getHeight()})`).call(this.xAxis);\n    }\n\n    if (yDomain) {\n      this.yScale = d3.scaleLinear().domain(yDomain).range([this.chart.getHeight(), 0]);\n    } else {\n      this.yScale = d3.scaleLinear().domain(this.defaultMinMax[1]).range([this.chart.getHeight(), 0]);\n    }\n    this.yAxis = d3.axisLeft().scale(this.yScale);\n    this.yGroup = this.chart.container.append('g').attr('class', 'y d3cf-axis').attr('transform', `translate(${this.chart.margins.left}, 0)`).call(this.yAxis);\n    if (this.options.grid) {\n       this.grid = new Grid(this, this.chart);\n    }\n\n    let padding = 0;\n    if (this.options.x.type === 'datetime') {\n      padding = 45;\n    }\n\n    if (this.xLabel) {\n      // update\n      this.xLabel\n        .attr('dx', (this.chart.width / 2) - ((this.chart.margins.right + this.chart.margins.left) / 2))\n        .attr('dy', this.chart.margins.bottom);\n    } else {\n      // add\n      this.xLabel = this.chart.container\n        .append('g')\n          .attr('class', 'x d3cf-axis-label')\n          .attr('transform', `translate(${this.chart.margins.left}, ${this.chart.getHeight() + padding})`)\n        .append('text')\n          .attr('dx', (this.chart.width / 2) - ((this.chart.margins.right + this.chart.margins.left) / 2))\n          .attr('dy', this.chart.margins.bottom)\n          .attr('class', 'd3cf-axis-label')\n          .style('text-anchor', 'middle')\n          .text(() => {\n            return this.options.x.title || '';\n          });\n    }\n    if (this.yLabel) {\n      // update\n      this.yLabel\n        .attr('dx', -(this.chart.height / 2) + ((this.chart.margins.top + this.chart.margins.bottom) / 2))\n        .attr('dy', -this.chart.margins.left);\n    } else {\n      // add\n      this.yLabel = this.chart.container\n        .append('g')\n          .attr('class', 'y d3cf-axis-label')\n          .attr('transform', `translate(${this.chart.margins.left}, 0)`)\n        .append('text')\n          .attr('transform', 'rotate(-90)')\n          .attr('dx', -(this.chart.height / 2) + ((this.chart.margins.top + this.chart.margins.bottom) / 2))\n          .attr('dy', -this.chart.margins.left)\n          .attr('class', 'd3cf-axis-label')\n          .style('text-anchor', 'middle')\n          .text(() => {\n            return this.options.y.title;\n          });\n    }\n  }\n\n  /**\n   * setDomain - sets the x, y domains based on the current chart data\n   *\n   */\n  setDomain() {\n    const minMax = this.calcMinMax(false);\n    this.xScale.domain(minMax[0]);\n    this.yScale.domain(minMax[1]);\n    if (this.options.filter) {\n      this.chart.removeFilter('_domain').addFilter('_domain', (d) => {\n        if (this.options.x.type === 'band') return d;\n        // TODO: should this scope be the Chart/Plot or the Axes?\n        let x1 = this.xScale.domain()[0];\n        if (x1 instanceof Date) {\n          x1 = x1.getTime();\n        }\n        let x2 = this.xScale.domain()[1];\n        if (x2 instanceof Date) {\n          x2 = x2.getTime();\n        }\n        const y1 = this.yScale.domain()[0];\n        const y2 = this.yScale.domain()[1];\n        if (d.hasOwnProperty('x2')) {\n          if ((Math.floor(d.x1) >= x1 && Math.floor(d.x2) <= x2) && (Math.floor(d.y1) >= y1 && Math.floor(d.y1) <= y2)) {\n            return d;\n          }\n        } else {\n          if ((Math.floor(d.x1) >= x1) && (Math.floor(d.y1) >= y1 && Math.floor(d.y1) <= y2)) {\n            return d;\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * update - update the x,y axes using the zoom domain\n   *\n   * @param {array} data - an array of {object} for each marker\n   * @param {boolean} shouldSetDomain - should the domain be set to data bounds\n   * @return {object} this\n   */\n  update(data, shouldSetDomain) {\n    this.remove();\n    if (data && shouldSetDomain) {\n      this.setDomain(data);\n    }\n    this.draw(this.xScale.domain(), this.yScale.domain());\n    return this;\n  }\n\n  /**\n   * the minMax for all nodes without the domain filters\n   *\n   * @param {boolean} shouldFilterDomain\n   * @return {array} minMax\n   */\n  calcMinMax(shouldFilterDomain) {\n      const data = this.chart.getGroupsNodes(shouldFilterDomain);\n      if (data.length === 0) {\n        if (this.options.x.type === 'band') {\n          return [[''], [0, 0]];\n        }\n        return [[0, 0], [0, 0]];\n      }\n      let xMin = 0;\n      let xMax = 0;\n      if (this.options.x.type === 'datetime') {\n        const x1 = _.pluck(data, 'x1');\n        const x2 = _.pluck(data, 'x2');\n        xMin = Axes.minDatetime(x1, this.useAutoPadding);\n        xMax = xMin;\n        if (x2.length > 0) {\n          xMax = Axes.maxDatetime(x2, this.useAutoPadding);\n        }\n        if (isNaN(xMax)) {\n          xMax = Axes.maxDatetime(x1, this.useAutoPadding);\n        }\n      } else if (this.options.x.type === 'band') {\n        xMin = _.pluck(data, 'x1');\n      } else {\n        const x1 = _.pluck(data, 'x1');\n        const x2 = _.pluck(data, 'x2');\n        xMin = Axes.minNumeric(x1, this.useAutoPadding);\n        xMax = xMin;\n        if (x2.length > 0) {\n          xMax = Axes.maxNumeric(x2, this.useAutoPadding);\n        }\n        if (isNaN(xMax)) {\n          xMax = Axes.maxNumeric(x1, this.useAutoPadding);\n        }\n      }\n      const yMin = 0;\n      const yMax = Axes.maxNumeric(_.pluck(data, 'y1'), this.useAutoPadding);\n      if (this.options.x.type === 'band') {\n        return [xMin, [yMin, yMax]];\n      }\n      return [[xMin, xMax], [yMin, yMax]];\n  }\n\n  /**\n   * reset - resets the x,y axes back to the original domain\n   *\n   */\n  reset() {\n    const minMax = this.calcMinMax(false);\n    if (minMax[0][0] === 0 && minMax[0][1] === 0 && minMax[1][0] === 0 && minMax[1][1] === 0) {\n        return;\n    }\n    this.remove();\n    this.draw(minMax[0], minMax[1]);\n    return this;\n  }\n\n  /**\n   * zoom - zooms the x, y axes based on the zoomArea object\n   *\n   * @param {object} zoomArea, an object containing a bounding box of x,y coordinates\n   */\n  zoom(zoomArea) {\n    if (zoomArea.x1 > zoomArea.x2) {\n      this.xScale.domain([zoomArea.x2, zoomArea.x1]);\n    } else {\n      this.xScale.domain([zoomArea.x1, zoomArea.x2]);\n    }\n    if (this.options.x.type === 'datetime') {\n      this.xAxis.tickFormat(d3.timeFormat(this.formatDate()));\n    }\n    if (zoomArea.y1 > zoomArea.y2) {\n      this.yScale.domain([zoomArea.y2, zoomArea.y1]);\n    } else {\n      this.yScale.domain([zoomArea.y1, zoomArea.y2]);\n    }\n    const trans = this.chart.container.transition().duration(750);\n    this.xGroup.transition(trans).call(this.xAxis);\n    this.xGroup.selectAll('g').selectAll('text').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em').attr('transform', 'rotate(-65)');\n    this.yGroup.transition(trans).call(this.yAxis);\n    if (this.grid) {\n      this.grid.remove();\n      this.grid = new Grid(this, this.chart);\n    }\n    return this;\n  }\n\n  /**\n   * remove - removes the x,y axis groups from the plot\n   *\n   */\n  remove() {\n    this.xGroup.remove();\n    this.yGroup.remove();\n    if (this.grid) {\n      return this.grid.remove();\n    }\n  }\n\n  /**\n   * formatDate - a method that formats the axis date label\n   *\n   */\n  formatDate() {\n    const xDomain = this.xScale.domain();\n    const duration = moment.duration(moment(xDomain[1]).diff(xDomain[0])).asDays();\n    if (duration <= 7) {\n      return '%b %d - %H:%M';\n    }\n    return '%b %d, %Y';\n  }\n\n  /**\n   * maxNumeric - determine the maximum value with padding. Padding is determined\n   * by the number of digits ^ 10 / 10, unless number of digets == 10 then return\n   * 10\n   *\n   * @param {array} data - an array of positive integers\n   * @return {number} max\n   */\n  static maxNumeric(data, useAutoPadding) {\n    const m = Math.floor(_.max(data));\n    if (useAutoPadding) {\n      const l = String(m).split('').length;\n      if (l === 1) {\n        return 10;\n      }\n      const p = (Math.pow(10, l)) / 10;\n      return m + p;\n    }\n    return Math.ceil(m);\n  }\n\n  /**\n   * minNumeric - determine the minimum value with padding. Padding is determined\n   * by the number of digits ^ 10 / 10, unless number of digets == 10 then return\n   * 10\n   *\n   * @param {array} data - an array of positive integers\n   * @return {number} max\n   */\n  static minNumeric(data, useAutoPadding) {\n    const m = Math.floor(_.min(data));\n    if (useAutoPadding) {\n      const l = String(m).split('').length;\n      if (l === 1) {\n        return 10;\n      }\n      const p = (Math.pow(10, l)) / 10;\n      return m + p;\n    }\n    return Math.ceil(m);\n  }\n\n  /**\n   * maxDatetime - determine the maximum value with padding\n   *\n   * @param {array} data - an array of timestamps in milliseconds\n   * @return {number} max - maximum datetime value\n   */\n  static maxDatetime(data, useAutoPadding) {\n    const max = moment(_.max(data));\n    if (useAutoPadding) {\n      const min = moment(_.min(data));\n      const unit = getDatetimeUnit(min, max);\n      return moment(max).add(1, unit).valueOf();\n    }\n    return max.valueOf();\n  }\n\n  /**\n   * minDatetime - determine the minimum value with padding\n   *\n   * @param {array} data - an array of timestamps in milliseconds\n   * @return {number} min - minimum datetime value\n   */\n  static minDatetime(data, useAutoPadding) {\n    const min = moment(_.min(data));\n    if (useAutoPadding) {\n      const max = moment(_.max(data));\n      const unit = getDatetimeUnit(min, max);\n      return moment(min).subtract(1, unit).valueOf();\n    }\n    return min.valueOf();\n  }\n}\n\n\nmodule.exports = Axes;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Axes.js","const d3 = require('d3');\n\nclass Grid {\n  /**\n   * Grid - constructs grids lines for the plot\n   *\n   * @param {object} axes - the axes to determine xScale, yScale\n   * @param {object} plot - the plot to append the axis\n   * @param {object} options - the properties for the axis\n   * @returns {object} this\n   */\n  constructor(axes, plot, options) {\n    this.plot = plot;\n    this.options = options || {};\n    this.axes = axes;\n    this.init();\n    return this;\n  }\n\n  /**\n   * init - initialize the x,y grid lines for a plot\n   *\n   */\n  init() {\n    this.xGrid = d3.axisBottom().scale(this.axes.xScale).tickFormat('').tickSize((this.plot.getHeight()) * -1, 0, 0);\n    this.xGroup = this.plot.container.insert('g', ':first-child').attr('class', 'd3cf-grid').attr('transform', `translate(${this.plot.margins.left}, ${this.plot.getHeight()})`).attr('opacity', null).call(this.xGrid);\n    this.yGrid = d3.axisLeft().scale(this.axes.yScale).tickFormat('').tickSize((this.plot.getWidth()) * -1, 0, 0);\n    this.yGroup = this.plot.container.insert('g', ':first-child').attr('class', 'd3cf-grid').attr('transform', `translate(${this.plot.margins.left}, 0)`).attr('opacity', null).call(this.yGrid);\n  }\n\n  /**\n   * remove - removed the grid lines from the plot\n   *\n   */\n  remove() {\n    this.xGroup.remove();\n    this.yGroup.remove();\n  }\n}\n\nmodule.exports = Grid;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Grid.js","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3\"\n// module id = 3\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"underscore\"\n// module id = 4\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 5\n// module chunks = 0","/**\n * InvalidNodeError - error thrown when an object is not instanceof Node\n *\n * @param {string} [message] - (optional) the message to the user\n */\nexport class InvalidNodeError extends Error {\n  constructor(message) {\n    const message_ = message || 'Is not instanceof Node.';\n    super(message_);\n  }\n}\n\n/**\n * InvalidGroupError - error thrown when an object is not instanceof Group\n *\n * @param {string} [message] - (optional) the message to the user\n */\nexport class InvalidGroupError extends Error {\n  constructor(message) {\n    const message_ = message || 'Is not instanceof Group.';\n    super(message_);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Errors.js","const d3 = require('d3');\nconst _ = require('underscore');\n\nimport Node from '../nodes/Node';\nimport { InvalidNodeError } from '../Errors';\n\n\nfunction genId() {\n  const length = 9;\n  const prefix = 'group-';\n  return prefix + Math.random().toString(36).substr(2, length);\n}\n\nclass Group {\n  constructor(chart, options) {\n    this.options = options || {};\n    this.id = this.options.id || genId();\n    const onEnter = this.options.onEnter || Group.onEnter;\n    this.onEnter = _.bind(onEnter, this);\n    const onUpdate = this.options.onUpdate || Group.onUpdate;\n    this.onUpdate = _.bind(onUpdate, this);\n    const onExit = this.options.onExit || Group.onExit;\n    this.onExit = _.bind(onExit, this);\n    this.nodes_ = {};\n    this.chart = chart;\n    return this;\n  }\n\n  /**\n  * size - returns the size of the Group's nodes\n  *\n  * @return {number} size - the size of the group\n  */\n  size() {\n    return Object.values(this.nodes_).length;\n  }\n\n  /**\n  * addNode - adds a node to this group\n  *\n  * @param {object} node - the node to add\n  * @throws {InvalidGroupError} error\n  * @return {Group} this\n  */\n  addNode(node) {\n    if (typeof node === 'undefined' || !node instanceof Node) {\n      throw new InvalidNodeError();\n    }\n    this.nodes_[node.id] = node;\n    return this;\n  }\n\n  /**\n  * removeNode - removes a node from this group\n  *\n  * @param {string} id - the id to remove\n  * @return {object} this\n  */\n  removeNode(id) {\n    if (this.nodes_.hasOwnProperty(id)) {\n      delete this.nodes_[id];\n    }\n    return this;\n  }\n\n  /**\n  * getNodes - returns the nodes associated with this group\n  *\n  * @return {array} nodes - the nodes associated with this group\n  */\n  getNodes() {\n    return Object.values(this.nodes_);\n  }\n\n  /**\n  * update - handles updating the marker\n  *\n  * @return {object} this\n  */\n  update() {\n    throw new Error('Update must be implemented.');\n  }\n\n  /**\n  * detached - builds a detached svg group and returns the node\n  *\n  * @return {object} node - the SVG node to append to the parent during .call()\n  */\n  detached() {\n    this.remove();\n    this.group = d3.select(document.createElementNS(d3.namespaces.svg, 'g')).attr('id', this.id).attr('class', 'd3cf-group').remove();\n    this.update();\n    return this.group.node();\n  }\n\n  /**\n   * remove - removes the group from the DOM\n   *\n   */\n  remove() {\n    if (this.group) {\n      this.group.remove();\n    }\n  }\n\n  /**\n   * destroy - destroys the group and any associated elements\n   *\n   */\n  destroy() {\n    this.remove();\n    this.chart.removeLayer(this.id);\n    this.nodes = null;\n    this.chart = null;\n    this.group = null;\n  }\n\n  /**\n   * onEnter - the default event handler for a group. This may be overridden or\n   *   a new event handler passed into the constructor as `options.onEnter`\n   *\n   * @param {object} selections - the d3 selection object containing the children for this group\n   */\n  static onEnter() {}\n\n  /**\n   * onUpdate - the default event handler for a group. This may be overridden or\n   *   a new event handler passed into the constructor as `options.onUpdate`\n   *\n   * @param {object} selections - the d3 selection object for this group\n   */\n  static onUpdate() {}\n\n  /**\n   * onExit - the default event handler for a group. This may be overridden or\n   *   a new event handler passed into the constructor as `options.onExit`\n   *\n   * @param {object} selections - the d3 selection object for this group\n   */\n  static onExit() {}\n}\n\nmodule.exports = Group;\n\n\n\n// WEBPACK FOOTER //\n// ./src/groups/Group.js","const d3 = require('d3');\n\n\nfunction genId() {\n  const length = 9;\n  const prefix = 'node-';\n  return prefix + Math.random().toString(36).substr(2, length);\n}\n\nclass Node {\n  /**\n   * Node - base class\n   *\n   * @param {object} options - the options used to construct the SegmentMarker\n   * @param {object} options.meta - the optional meta data associated with the node (e.g. used in the Tooltip)\n   * @return {object} this\n   */\n  constructor(options) {\n    this.id = options.id || genId();\n    this.meta = options.meta || {};\n    this.group = null;\n    return this;\n  }\n\n  /**\n   * remove - removes the marker from the DOM\n   *\n   */\n  remove() {\n    if (this.group) {\n      return this.group.remove();\n    }\n  }\n\n  /**\n   * update - updates one or more elements within the RectNode SVG group\n   *\n   */\n  update() {\n    return this;\n  }\n\n  /**\n   * detached - builds a detached svg group and returns the node\n   *\n   * @return {object} node - the SVG node to append to the parent during .call()\n   */\n  detached() {\n    this.remove();\n    this.group = d3.select(document.createElementNS(d3.namespaces.svg, 'g')).attr('id', this.id).attr('class', 'd3cf-node').attr('opacity', this.o).remove();\n    this.update();\n    return this.group.node();\n  }\n\n}\n\n\nmodule.exports = Node;\n\n\n\n// WEBPACK FOOTER //\n// ./src/nodes/Node.js","import Group from './Group';\n\n\nclass BarGroup extends Group {\n  constructor(chart, options) {\n    super(chart, options);\n    return this;\n  }\n\n  /**\n   * update - handles updating the marker\n   *\n   * @return {object} this\n   */\n  update() {\n    const filtered = this.chart.applyFilters(this.getNodes());\n    this.group.attr('numNodes', filtered.length);\n    const nodes = this.group.selectAll('.d3cf-node').data(filtered, (d) => {\n      return d.id;\n    });\n    nodes.enter().append((node) => {\n      return node.detached();\n    }).call(this.onEnter);\n    nodes.each((node) => {\n      return node.update();\n    }).call(this.onUpdate);\n    nodes.exit().remove().call(this.onExit);\n  }\n\n}\n\nmodule.exports = BarGroup;\n\n\n\n// WEBPACK FOOTER //\n// ./src/groups/BarGroup.js","const d3 = require('d3');\n\nimport Group from './Group';\n\n\nclass LineGroup extends Group {\n  constructor(chart, options) {\n    super(chart, options);\n    this.s = options.s || 'steelblue';\n    this.w = options.w || 1.5;\n    this.meta = options.meta || {};\n    const defaultGenerator = d3.line().x((d) => {\n      return this.chart.axes.xScale(d.x1);\n    }).y((d) => {\n      return this.chart.axes.yScale(d.y1);\n    });\n    this.generator = options.generator || defaultGenerator;\n    return this;\n  }\n\n  /**\n   * update - handles updating the marker\n   *\n   * @return {object} this\n   */\n  update() {\n    if (typeof this.group === 'undefined') {\n      return;\n    }\n    /**\n     * comparator function for sorting by x1 ascending\n     *\n     * @param {object} a - LineNode object\n     * @param {object} b - LineNode object\n     * @return {number}\n     */\n    function cmp(a, b) {\n      return a.x1 - b.x1;\n    }\n    const filtered = this.chart.applyFilters(this.getNodes()).sort(cmp);\n    this.group.attr('numNodes', filtered.length);\n    // select\n    const path = this.group.select('.d3cf-line');\n    if (path.empty()) {\n      // enter\n      this.group.append('path')\n        .datum(filtered, (d) => {\n          return d.id;\n        })\n        .attr('fill', 'transparent')\n        .attr('stroke', this.s)\n        .attr('stroke-linejoin', 'round')\n        .attr('stroke-linecap', 'round')\n        .attr('stroke-width', this.w)\n        .attr('class', 'd3cf-line')\n        .attr('d', (d) => {\n          return this.generator(d);\n        })\n        .call(this.onEnter);\n    }\n    // update\n    path.attr('stroke', this.s)\n      .attr('stroke-width', this.w)\n      .attr('d', (d) => {\n        return this.generator(d);\n      }).call(this.onUpdate);\n    // exit\n    path.exit().remove().call(this.onExit);\n    const nodes = this.group.selectAll('.node').data(filtered, (d) => {\n      return d.id;\n    });\n    nodes.enter().append((node) => {\n      return node.detached();\n    }).call(this.onEnter);\n    nodes.each((node) => {\n      return node.update();\n    }).call(this.onUpdate);\n    nodes.exit().remove().call(this.onExit);\n  }\n\n}\n\nmodule.exports = LineGroup;\n\n\n\n// WEBPACK FOOTER //\n// ./src/groups/LineGroup.js","import Group from './Group';\n\n\nclass NodeGroup extends Group {\n  constructor(chart, options) {\n    super(chart, options);\n    return this;\n  }\n\n  /**\n   * update - handles updating the marker\n   * @override\n   *\n   * @return {object} this\n   */\n  update() {\n    if (typeof this.group === 'undefined') {\n      return;\n    }\n    const filtered = this.chart.applyFilters(this.getNodes());\n    this.group.attr('numNodes', filtered.length);\n    const nodes = this.group.selectAll('.node').data(filtered, (d) => {\n      return d.id;\n    });\n    nodes.enter().append((node) => {\n      return node.detached();\n    }).call(this.onEnter);\n    nodes.each((node) => {\n      return node.update();\n    }).call(this.onUpdate);\n    nodes.exit().remove().call(this.onExit);\n  }\n\n}\n\nmodule.exports = NodeGroup;\n\n\n\n// WEBPACK FOOTER //\n// ./src/groups/NodeGroup.js","const d3 = require('d3');\n\nimport Node from './Node';\n\n\nclass BarNode extends Node {\n  /**\n   * BarNode - a data point for a path/line generator\n   *\n   * @param {object} chart - an instance of a chart\n   * @param {object} options - the options used to construct the chart\n   * @param {string} options.x1 - the category for x1 position\n   * @param {number} options.y1 - the value for y1 position\n   * @param {string} options.fill - the fill of the bar\n   * @param {number} options.opacity - the opacity of the bar\n   * @param {object=} options.meta - the optional meta data associated with the circle (e.g. used in the Tooltip)\n   * @return {object} this\n   */\n  constructor(chart, options) {\n    super(options);\n    this.chart = chart;\n    this.x1 = options.x1;\n    this.y1 = options.y1;\n    this.fill = options.fill || '#345e7e';\n    this.opacity = options.opacity || 0;\n    this.style = options.style || 'd3cf-node';\n    this.meta = options.meta || {};\n    return this;\n  }\n\n  getFill(type) {\n    let fill = '#33B5E5';\n    switch (type) {\n      case 'info':\n        fill = '#33B5E5';\n        break;\n      case 'success':\n        fill = '#00C851';\n        break;\n      case 'muted':\n        fill = '#636c72';\n        break;\n      case 'primary':\n        fill = '#0275d8';\n        break;\n      case 'warning':\n        fill = '#FFBB33';\n        break;\n      case 'danger':\n        fill = '#d9534f';\n        break;\n      default:\n        break;\n    }\n    return fill;\n  }\n\n  /**\n  * update - updates one or more elements\n  * @returns {object} this\n  */\n  update() {\n    if (typeof this.group === 'undefined') {\n      this.group = d3.select(`#${this.id}`);\n    }\n    // select\n    const rect = this.group.selectAll('rect').data([this], (d) => {\n      return d.id;\n    });\n    // create\n    rect.enter().append('rect').attr('class', this.style).attr('x', () => {\n      return this.chart.axes.xScale(this.x1);\n    }).attr('y', () => {\n      return this.chart.axes.yScale(this.y1);\n    }).attr('width', () => {\n      return this.chart.axes.xScale.bandwidth();\n    }).attr('height', () => {\n      return this.chart.getHeight() - this.chart.axes.yScale(this.y1);\n    }).style('fill', () => {\n      return this.getFill(this.x1);\n    }).style('opacity', () => {\n      return this.opacity;\n    }).on('mouseover', () => {\n      if (this.chart.tooltip) {\n        return this.chart.tooltip.mouseover(this, d3.event.pageX, d3.event.pageY);\n      }\n    }).on('mouseout', () => {\n      if (this.chart.tooltip) {\n        return this.chart.tooltip.mouseout();\n      }\n    });\n    // update\n    rect.attr('x', () => {\n      return this.chart.axes.xScale(this.x1);\n    }).attr('y', () => {\n      return this.chart.axes.yScale(this.y1);\n    }).attr('width', () => {\n      return this.chart.axes.xScale.bandwidth();\n    }).attr('height', () => {\n      return this.chart.getHeight() - this.chart.axes.yScale(this.y1);\n    });\n    // remove\n    rect.exit().remove();\n    return this;\n  }\n}\n\n\nmodule.exports = BarNode;\n\n\n\n// WEBPACK FOOTER //\n// ./src/nodes/BarNode.js","const d3 = require('d3');\n\nimport Node from './Node';\n\n\nclass LineNode extends Node {\n  /**\n   * LineNode - a data point for a path/line generator\n   *\n   * @param {object} chart - an instance of a chart\n   * @param {object} options - the options used to construct the plot\n   * @param {number} options.x1 - the value for x1 position\n   * @param {number} options.y1 - the value for y1 position\n   * @param {string} options.radius - the radius of the circle\n   * @param {number} options.opacity - the opacity of the cirle\n   * @param {object} options.meta - the optional meta data associated with the circle (e.g. used in the Tooltip)\n   * @return {object} this\n   */\n  constructor(chart, options) {\n    super(options);\n    this.chart = chart;\n    this.x1 = options.x1;\n    this.y1 = options.y1;\n    this.radius = options.radius || 3;\n    this.opacity = options.opacity || 0;\n    this.style = options.style || 'd3cf-node';\n    this.meta = options.meta || {};\n    return this;\n  }\n\n  getFill(type) {\n    let fill = '#33B5E5';\n    switch (type) {\n      case 'warning':\n        fill = '#FFBB33';\n        break;\n      case 'success':\n        fill = '#00C851';\n        break;\n      case 'info':\n        fill = '#33B5E5';\n        break;\n      default:\n        break;\n    }\n    return fill;\n  }\n\n  /**\n   * update - updates one or more elements\n   *\n   */\n  update() {\n    if (typeof this.group === 'undefined') {\n      this.group = d3.select(`#${this.id}`);\n    }\n    /**\n     * Each node of the line's `path` (see LineGroup) is a transparent circle in\n     * order to have a mouseover event.\n     *\n     * @see https://groups.google.com/forum/#!topic/d3-js/gHzOj91X2NA\n     */\n    // select\n    const circle = this.group.selectAll('circle').data([this], (d) => {\n      return d.id;\n    });\n    // create\n    circle.enter().append('circle')\n      .attr('class', this.style)\n      .attr('cx', () => {\n        return this.chart.axes.xScale(this.x1);\n      }).attr('cy', () => {\n        return this.chart.axes.yScale(this.y1);\n      }).attr('r', () => {\n        return this.radius;\n      }).attr('opacity', () => {\n        return this.opacity;\n      }).on('mouseover', () => {\n        if (this.chart.tooltip) {\n          return this.chart.tooltip.mouseover(this, d3.event.pageX, d3.event.pageY);\n        }\n      }).on('mouseout', () => {\n        if (this.chart.tooltip) {\n          return this.chart.tooltip.mouseout();\n        }\n      });\n    // update\n    circle.attr('cx', () => {\n      return this.chart.axes.xScale(this.x1);\n    }).attr('cy', () => {\n      return this.chart.axes.yScale(this.y1);\n    }).attr('r', () => {\n      return this.radius;\n    }).attr('opacity', () => {\n      return this.opacity;\n    });\n    // remove\n    circle.exit().remove();\n    return this;\n  }\n\n}\n\n\nmodule.exports = LineNode;\n\n\n\n// WEBPACK FOOTER //\n// ./src/nodes/LineNode.js","const d3 = require('d3');\n\nimport Node from './Node';\n\n\nconst MINIMUM_MARKER_WIDTH = 10;\nconst MINIMUM_MARKER_HEIGHT = 10;\n\nclass RectNode extends Node {\n  /**\n   * RectNode - a rectangular node\n   *\n   * @param {object} plot - an instance of a plot\n   * @param {object} options - the options used to construct the plot\n   * @param {number} options.x1 - the value for x1 position\n   * @param {number} options.x2 - the value for x2 position\n   * @param {number} options.y1 - the value for y1 position\n   * @param {number} options.height - the value for the height\n   * @param {string} options.fill - the fill of the marker\n   * @param {number} options.opacity - the opacity of the marker\n   * @param {object} options.meta - the optional meta data associated with the marker (e.g. used in the Tooltip)\n   * @return {object} this\n   */\n  constructor(plot, options) {\n    super(options);\n    this.plot = plot;\n    this.x1 = options.x1;\n    this.x2 = options.x2;\n    this.y1 = options.y1;\n    this.height = options.height || 10;\n    this.fill = options.fill || '#345e7e';\n    this.opacity = options.opacity || 0.4;\n    this.style = options.style || 'd3cf-node';\n    return this;\n  }\n\n  /**\n  * update - updates one or more elements within the RectNode SVG group\n  *\n  */\n  update() {\n    if (typeof this.group === 'undefined') {\n      this.group = d3.select(`#${this.id}`);\n    }\n    // select\n    const rect = this.group.selectAll('rect').data([this], (d) => {\n      return d.id;\n    });\n    // create\n    rect.enter().append('rect').attr('class', this.style).attr('x', () => {\n      return this.plot.axes.xScale(this.x1);\n    }).attr('y', () => {\n      let height = this.height;\n      if (height < MINIMUM_MARKER_HEIGHT) {\n        height = MINIMUM_MARKER_HEIGHT;\n      }\n      return this.plot.axes.yScale(this.y1) - height / 2;\n    }).attr('width', () => {\n      let width = this.plot.axes.xScale(this.x2) - this.plot.axes.xScale(this.x1);\n      if (width < MINIMUM_MARKER_WIDTH) {\n        width = MINIMUM_MARKER_WIDTH;\n      }\n      return width;\n    }).attr('height', () => {\n      let height = this.height;\n      if (height < MINIMUM_MARKER_HEIGHT) {\n        height = MINIMUM_MARKER_HEIGHT;\n      }\n      return height;\n    }).style('fill', () => {\n      return this.fill;\n    }).style('opacity', () => {\n      return this.opacity;\n    }).on('mouseover', () => {\n      if (this.plot.tooltip) {\n        return this.plot.tooltip.mouseover(this, d3.event.pageX, d3.event.pageY);\n      }\n    }).on('mouseout', () => {\n      if (this.plot.tooltip) {\n        return this.plot.tooltip.mouseout();\n      }\n    });\n\n    // update\n    rect.attr('x', () => {\n      return this.plot.axes.xScale(this.x1);\n    }).attr('y', () => {\n      let height = this.height;\n      if (height < MINIMUM_MARKER_HEIGHT) {\n        height = MINIMUM_MARKER_HEIGHT;\n      }\n      return this.plot.axes.yScale(this.y1) - height / 2;\n    }).attr('width', () => {\n      let width = this.plot.axes.xScale(this.x2) - this.plot.axes.xScale(this.x1);\n      if (width < MINIMUM_MARKER_WIDTH) {\n        width = MINIMUM_MARKER_WIDTH;\n      }\n      return width;\n    }).attr('height', () => {\n      let height = this.height;\n      if (height < MINIMUM_MARKER_HEIGHT) {\n        height = MINIMUM_MARKER_HEIGHT;\n      }\n      return height;\n    });\n\n    // remove\n    rect.exit().remove();\n    return this;\n  }\n}\n\n\nmodule.exports = RectNode;\n\n\n\n// WEBPACK FOOTER //\n// ./src/nodes/RectNode.js","import d3 from 'd3';\nimport _ from 'underscore';\nimport Node from './Node';\n\nconst MINIMUM_LINE_STROKE = 4;\nconst MINIMUM_CIRCLE_RADIUS = 5;\nconst MINIMUM_LINE_THRESHOLD = 2;\n\nclass SegmentNode extends Node {\n  /**\n   * SegmentNode - a line with beginning and end circles\n   * @param {object} plot - an instance of a plot\n   * @param {object} options - the options used to construct the SegmentNode\n   * @param {number} options.x - the value for x position\n   * @param {number} options.y - the value for y position\n   * @param {number} options.width - the value for the width of the line\n   * @param {number} options.height - the value for the height\n   * @param {string} options.fill - the fill of the line\n   * @param {number} options.opacity - the opacity of the line\n   * @param {object} options.meta - the optional meta data associated with the node (e.g. used in the Tooltip)\n   * @return {object} this\n   */\n  constructor(plot, options) {\n    super(options);\n    this.plot = plot;\n    this.x = options.x;\n    this.y = options.y;\n    this.width = options.width;\n    this.height = options.height || MINIMUM_LINE_STROKE;\n    this.radius = options.radius || MINIMUM_CIRCLE_RADIUS;\n    this.fill = options.fill || '#345e7e';\n    this.opacity = options.opacity || 0.3;\n    this.meta = options.meta || {};\n    return this;\n  }\n\n  /**\n   * remove - removes the node from the DOM\n   *\n   * @return {object} this\n   */\n  remove() {\n    if (this.group) {\n      return this.group.remove();\n    }\n  }\n\n  /**\n   * filteredOrderedPair - determine if the pair exists within the domain\n   *\n   */\n  filteredOrderedPair(orderedPair) {\n    if (orderedPair[0] < this.plot.axes.xScale.range()[0]) {\n      orderedPair[0] = null;\n    }\n    if (orderedPair[0] > this.plot.axes.xScale.range()[1]) {\n      orderedPair[0] = null;\n    }\n    if (orderedPair[1] < this.plot.axes.yScale.range()[1]) {\n      orderedPair[1] = null;\n    }\n    if (orderedPair[1] > this.plot.axes.yScale.range()[0]) {\n      orderedPair[1] = null;\n    }\n    return orderedPair;\n  }\n\n  /**\n   * update - handles updating the node\n   *\n   * @return {object} this\n   */\n  update() {\n    if (typeof this.group === 'undefined') {\n      this.group = d3.select(`#${this.id}`);\n    }\n    const linePairs = [[this.plot.axes.xScale(this.x), this.plot.axes.yScale(this.y)], [this.plot.axes.xScale(this.width), this.plot.axes.yScale(this.y)]];\n    const lineDistance = this.distance(linePairs);\n    const totalRange = this.plot.axes.xScale.range()[1];\n    const linePercentage = Math.floor((lineDistance / totalRange) * 100);\n    const startPoint = this.filteredOrderedPair([this.plot.axes.xScale(this.x), this.plot.axes.yScale(this.y)]);\n    const start = this.group.selectAll('.start-circle').data([this], (d) => {\n      return d.id;\n    });\n    if (startPoint[0] !== null && startPoint[1] !== null) {\n      start.enter().append('circle').attr('class', 'start-circle').style('fill', this.fill).attr('cx', startPoint[0]).attr('cy', startPoint[1]).attr('r', () => {\n        let radius = this.radius;\n        radius = Math.ceil((radius * (linePercentage / 100)) + radius);\n        if (radius < MINIMUM_CIRCLE_RADIUS) {\n          radius = MINIMUM_CIRCLE_RADIUS;\n        }\n        return radius;\n      });\n      start.attr('cx', startPoint[0]).attr('cy', startPoint[1]).attr('r', () => {\n        let radius = this.radius;\n        radius = Math.ceil((radius * (linePercentage / 100)) + radius);\n        if (radius < MINIMUM_CIRCLE_RADIUS) {\n          radius = MINIMUM_CIRCLE_RADIUS;\n        }\n        return radius;\n      });\n      start.exit().remove();\n    } else {\n      this.group.selectAll('.start-circle').remove();\n    }\n    if (linePercentage >= MINIMUM_LINE_THRESHOLD) {\n      const line = this.group.selectAll('line').data([this], (d) => {\n        return d.id;\n      });\n      line.enter().append('line').attr('x1', () => {\n        if (linePairs[0][0] <= this.plot.axes.xScale.range()[0]) {\n          return this.plot.axes.xScale.range()[0];\n        }\n        if (linePairs[0][0] >= this.plot.axes.xScale.range()[1]) {\n          return null;\n        }\n        return linePairs[0][0];\n      }).attr('y1', linePairs[0][1]).attr('x2', () => {\n        if (linePairs[1][0] >= this.plot.axes.xScale.range()[1]) {\n          return this.plot.axes.xScale.range()[1];\n        }\n        if (linePairs[1][0] <= this.plot.axes.xScale.range()[0]) {\n          return null;\n        }\n        return linePairs[1][0];\n      }).attr('y2', linePairs[1][1]).attr('stroke-width', () => {\n        let height = this.height;\n        height = Math.ceil((height * (linePercentage / 100)) + height);\n        if (height < MINIMUM_LINE_STROKE) {\n          return MINIMUM_LINE_STROKE;\n        }\n        return height;\n      }).attr('stroke', this.fill);\n      line.attr('x1', () => {\n        if (linePairs[0][0] <= this.plot.axes.xScale.range()[0]) {\n          return this.plot.axes.xScale.range()[0];\n        }\n        if (linePairs[0][0] >= this.plot.axes.xScale.range()[1]) {\n          return null;\n        }\n        return linePairs[0][0];\n      }).attr('y1', linePairs[0][1]).attr('x2', () => {\n        if (linePairs[1][0] >= this.plot.axes.xScale.range()[1]) {\n          return this.plot.axes.xScale.range()[1];\n        }\n        if (linePairs[1][0] <= this.plot.axes.xScale.range()[0]) {\n          return null;\n        }\n        return linePairs[1][0];\n      }).attr('y2', linePairs[1][1]).attr('stroke-width', () => {\n        let height = this.height;\n        height = Math.ceil((height * (linePercentage / 100)) + height);\n        if (height < MINIMUM_LINE_STROKE) {\n          return MINIMUM_LINE_STROKE;\n        }\n        return height;\n      });\n    } else {\n      this.group.selectAll('line').remove();\n    }\n    const endPoint = this.filteredOrderedPair([this.plot.axes.xScale(this.width), this.plot.axes.yScale(this.y)]);\n    if (linePercentage >= MINIMUM_LINE_THRESHOLD) {\n      if (endPoint[0] !== null && endPoint[1] !== null) {\n        const end = this.group.selectAll('.end-circle').data([this], (d) => {\n          return d.id;\n        });\n        end.enter().append('circle').attr('class', 'end-circle').attr('cx', endPoint[0]).attr('cy', endPoint[1]).attr('r', () => {\n          let radius = this.radius;\n          radius = Math.ceil(((radius * linePercentage) / 100) + radius);\n          if (radius < MINIMUM_CIRCLE_RADIUS) {\n            radius = MINIMUM_CIRCLE_RADIUS;\n          }\n          return radius;\n        }).style('fill', this.fill);\n        end.attr('class', 'end-circle').attr('cx', endPoint[0]).attr('cy', endPoint[1]).attr('r', () => {\n          let radius = this.radius;\n          radius = Math.ceil(((radius * linePercentage) / 100) + radius);\n          if (radius < MINIMUM_CIRCLE_RADIUS) {\n            radius = MINIMUM_CIRCLE_RADIUS;\n          }\n          return radius;\n        });\n      } else {\n        this.group.selectAll('.end-circle').remove();\n      }\n    } else {\n      this.group.selectAll('.end-circle').remove();\n    }\n    return this;\n  }\n\n  /**\n   * detached - builds a detached svg group and returns the node\n   *\n   * @return {object} node - the SVG node to append to the parent during .call()\n   */\n  detached() {\n    this.remove();\n    this.group = d3.select(document.createElementNS(d3.namespaces.svg, 'g')).attr('id', this.id).attr('class', 'node').attr('opacity', this.opacity).remove();\n    this.update();\n    this.group.node();\n  }\n\n  /**\n   * distance - determine the distance between two pairs\n   *\n   */\n  distance(pairs) {\n    return Math.sqrt(Math.pow(Math.abs(pairs[0][0] - pairs[1][0]), 2) + Math.pow(Math.abs(pairs[0][1] - pairs[1][1]), 2));\n  }\n\n  /**\n   * groupOverlappingSegments - group overlapping segments together\n   *\n   * @param {array} segments - an array of SegmentNode's\n   * @return {object} groups - groups of overlapping segments\n   */\n  static groupOverlappingSegments(segments) {\n    const groups = {};\n    const segmentsByHeightAndCumulative = _.groupBy(segments, (segment) => {\n      let c = false;\n      if (typeof segment.meta.cumulative === 'undefined') {\n        c = false;\n      } else {\n        c = segment.meta.cumulative;\n      }\n      return `${segment.y}:${c}`;\n    });\n    Object.keys(segmentsByHeightAndCumulative).forEach((key) => {\n      const values = segmentsByHeightAndCumulative[key];\n      values.sort((a, b) => {\n        return a.x - b.x;\n      });\n      let i = 0;\n      const points = [];\n      while (i < values.length) {\n        if (i === 0) {\n          points[0] = values[0];\n          const groupName = `${values[0].w}:${key}`;\n          groups[groupName] = [values[0]];\n          i++;\n          continue; // eslint-disable-line no-continue\n        }\n        const lastIdx = points.length - 1;\n        if (lastIdx < 0) {\n          break;\n        }\n        const lastPoint = points[lastIdx];\n        if (values[i].x >= lastPoint.x && values[i].w <= lastPoint.w) {\n          const groupName = `${lastPoint.w}:${key}`;\n          let group = groups[groupName];\n          if (typeof group === 'undefined') {\n            group = [];\n          }\n          group.push(values[i]);\n          i++;\n        } else {\n          points[lastIdx + 1] = values[i];\n          const groupName = `${values[i].w}:${key}`;\n          groups[groupName] = [values[i]];\n          i++;\n        }\n      }\n    });\n    return groups;\n  }\n}\n\n\nmodule.exports = SegmentNode;\n\n\n\n// WEBPACK FOOTER //\n// ./src/nodes/SegmentNode.js","const d3 = require('d3');\nconst _ = require('underscore');\n\nimport Axes from './Axes';\nimport Tooltip from './Tooltip';\nimport Zoom from './Zoom';\nimport Group from './groups/Group';\nimport { InvalidGroupError } from './Errors';\n\n\nconst MINIMUM_CHART_HEIGHT = 300;\n\nclass Chart {\n  /**\n   * Chart - creates a new instance of a chart\n   *\n   * @param {object} options - the options to create a chart\n   * @param {string} containerID - the id of the container div\n   * @param {string} svgcontainerClass - the desired class of the constructed svg element\n   * @param {object} tooltip\n   * @param {number} tooltip.opacity - the background opacity for the tooltip\n   * @param {object} tooltip.template - the compiled template\n   * @param {boolean} scale - scale the svg on window resize @default false\n   * @param {boolean} resize -resize the svg on window resize @default true\n   * @return {object} returns self\n   */\n  constructor(options) {\n    this.options = options;\n    this.drawn = false;\n    this.filters = options.filters || {};\n    this.groups_ = {};\n    return this;\n  }\n\n  /**\n   * init - method to initialize the chart, allows the chart to be re-initialized\n   *  on resize while keeping the current chart data in memory\n   *\n   * @return {object} this\n   */\n  init() {\n    this.setDimensions();\n    const scale = this.options.scale || false;\n    if (scale) {\n      this.root = d3.select(`#${this.options.containerID}`).append('svg').attr('viewBox', `0 0 ${this.viewBoxWidth} ${this.viewBoxHeight}`).attr('preserveAspectRatio', 'xMinYMin meet');\n    } else {\n      this.root = d3.select(`#${this.options.containerID}`).append('svg').attr('width', this.viewBoxWidth).attr('height', this.viewBoxHeight);\n    }\n    this.container = this.root.append('g').attr('class', this.options.svgContainerClass).attr('width', this.getWidth()).attr('height', this.getHeight()).attr('transform', `translate(${this.margins.left}, ${this.margins.top})`);\n    this.axes = new Axes(this, this.options.axes);\n    this.tooltip = new Tooltip(this, this.options);\n    const zoomEnabled = this.options.zoom || false;\n    if (zoomEnabled) {\n      this.zoom = new Zoom(this, this.options);\n    }\n    this.groups = this.container.append('g').attr('class', 'd3cf-groups').attr('transform', `translate(${this.margins.left}, 0)`);\n    return this;\n  }\n\n  /**\n   * setDimensions - method to set the dimensions of the chart based on the current window\n   *\n   */\n  setDimensions() {\n    this.margins = this.options.margins || {\n      left: 40,\n      right: 20,\n      top: 20,\n      bottom: 40,\n    };\n    this.width = this.options.width || document.getElementById(this.options.containerID).offsetWidth - (this.margins.left + this.margins.right);\n    this.height = this.options.height;\n    if (this.height < MINIMUM_CHART_HEIGHT) {\n      this.height = MINIMUM_CHART_HEIGHT;\n    }\n    this.viewBoxWidth = this.width + this.margins.left + this.margins.right;\n    this.viewBoxHeight = this.height + this.margins.top + this.margins.bottom;\n    return this;\n  }\n\n  /**\n   * update - update the width and height attributes of the root and container\n   *  elements. then call update on the chart axes\n   *\n   * @param {array} nodes - an array of {object} for each node\n   * @return {object} this\n   */\n  update(nodes) {\n    this.setDimensions();\n    this.root.attr('width', this.viewBoxWidth).attr('height', this.viewBoxHeight);\n    this.container.attr('width', this.width).attr('height', this.height).attr('transform', `translate(${this.margins.left}, ${this.margins.top})`);\n    if (typeof nodes === 'undefined') {\n      this.axes.update(this.getGroupsNodes(), false);\n    } else {\n      if (nodes instanceof Array) {\n        this.axes.update(nodes, true);\n      } else {\n        this.mergeGroups(nodes);\n        this.axes.update(this.getGroupsNodes(false), true);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * draw - draws the markers on the chart\n   *\n   * @see this will automatically show/hide a warning message if the data\n   * is empty. Do not call super() to override this behavior.\n   *\n   * @param {array} nodes - an array of {object} for each marker\n   */\n  draw(nodes) {\n    if (!this.drawn) {\n      this.drawn = true;\n      this.root.transition().style('opacity', 1);\n    }\n    if (typeof nodes === 'undefined') {\n      if (this.getGroupsSize() <= 0) {\n        this.showWarn();\n        return;\n      }\n    } else {\n      if (nodes instanceof Array) {\n        const group = this.defaultGroup(nodes);\n        if (group.size() <= 0) {\n          this.showWarn();\n          return;\n        }\n      } else {\n        if (this.getGroupsSize() <= 0) {\n          this.showWarn();\n          return;\n        }\n      }\n    }\n    this.removeWarn();\n  }\n\n  /**\n   * defaultGroup - creates a default group if an array is passed to the draw method\n   *\n   * @param {array} nodes - an array of Node's\n   */\n  defaultGroup() {\n    throw new Error('defaultGroup must be implemented.');\n  }\n\n  /**\n   * applyFilters - apply any filters from the chart\n   *\n   * @param {object} filters - an array of filters to apply\n   * @return {array} filtered, the filtered data\n   */\n  applyFilters(nodes, filters) {\n    const filters_ = filters || this.filters;\n    let filtered = [];\n    if (nodes) {\n      filtered = nodes.filter((d) => {\n        let valid = true;\n        const keys = Object.keys(filters_);\n        let i = 0;\n        const keysLen = keys.length;\n        while (i < keysLen) {\n          const key = keys[i++];\n          const f = filters_[key](d);\n          if (typeof f === 'undefined') {\n            valid = false;\n            break;\n          }\n        }\n        if (valid) {\n          return d;\n        }\n      });\n    }\n    return filtered;\n  }\n\n  /**\n   * getWidth\n   *\n   * @return {number} width - (excluding margins) for the root svg\n   */\n  getWidth() {\n    return this.width - (this.margins.left + this.margins.right);\n  }\n\n  /**\n   * getHeigth\n   *\n   * @return {number} width - (excluding margins) for the root svg\n   */\n  getHeight() {\n    return this.height - (this.margins.top + this.margins.bottom);\n  }\n\n  /**\n   * showWarn - shows a warning message in the center of the chart\n   *\n   * @param {string} m - the message to display\n   * @return {object} this\n   */\n  showWarn(m) {\n    const message = m || 'No data to display';\n    if (this.warn) {\n      this.removeWarn();\n    }\n    this.warn = this.container.append('g').style('opacity', 0).attr('class', 'd3cf-warn');\n    this.warn.append('text').attr('text-anchor', 'middle').attr('x', this.width / 2).attr('y', this.getHeight() / 2).text(message);\n    this.warn.transition().style('opacity', 1);\n    return this;\n  }\n\n  /**\n   * removeWarn - removes the warning message from the chart\n   *\n   * @return {object} this\n   */\n  removeWarn() {\n    if (this.warn) {\n      this.warn.remove();\n    }\n    return this;\n  }\n\n  /**\n   * remove - removes the chart from the DOM and any event listeners\n   *\n   * @return {object} this\n   */\n  remove() {\n    if (this.zoom && typeof this.zoom.remove === 'function') this.zoom.remove();\n    if (this.tooltip && typeof this.tooltip.remove === 'function') this.tooltip.remove();\n    if (this.axes && typeof this.axes.remove === 'function') this.axes.remove();\n    if (this.container && typeof this.container.remove === 'function') this.container.remove();\n    if (this.root && typeof this.root.remove === 'function') this.root.remove();\n  }\n\n  /**\n   * destroy - destroys the chart and any associated elements\n   *\n   */\n  destroy() {\n    this.remove();\n    this.zoom = null;\n    this.tooltip = null;\n    this.axes = null;\n    this.container = null;\n    this.root = null;\n    this.resizeHandler = null;\n  }\n\n  /**\n   * addGroup\n   *\n   * @param {object} group - add a group to the chart\n   * @throws {InvalidGroupError} error\n   * @return {Chart} this\n   */\n  addGroup(group) {\n    if (group instanceof Group === false) {\n      throw new InvalidGroupError();\n    }\n    this.groups_[group.id] = group;\n    return this;\n  }\n\n  /**\n   * removeGroup\n   *\n   * @param {string} id - the group to remove\n   * @return {Chart} this\n   */\n  removeGroup(id) {\n    if (this.groups_.hasOwnProperty(id)) {\n      delete this.groups_[id];\n    }\n    return this;\n  }\n\n  /**\n   * getGroups - returns the groups associated with this chart\n   *\n   * @return {array} groups - the groups associated with this chart\n   */\n  getGroups() {\n    return Object.values(this.groups_);\n  }\n\n  /**\n   * getGroups - returns the size of all the groups\n   *\n   * @param {boolean} shouldFilter - should the nodes be filtered by domain\n   * @return {Number} size - the size of all the groups\n   */\n  getGroupsSize(shouldFilter) {\n    return this.getGroups().reduce((prev, nextObj) => {\n      if (shouldFilter) {\n        return prev + this.applyFilters(nextObj.getNodes()).length;\n      }\n      const filters = Object.assign({}, this.filters);\n      if (filters.hasOwnProperty('_domain')) {\n        delete filters._domain;\n      }\n      return prev + this.applyFilters(nextObj.getNodes(), filters).length;\n    }, 0);\n  }\n\n  /**\n   * getGroupsNodes - returns all the nodes for each group\n   *\n   * @param {boolean} shouldFilter - should the nodes be filtered by domain\n   * @return {array} nodes - an array of nodes\n   */\n  getGroupsNodes(shouldFilter) {\n    return this.getGroups().reduce((prevArr, nextObj) => {\n      if (shouldFilter) {\n        return prevArr.concat(this.applyFilters(nextObj.getNodes()));\n      }\n      const filters = Object.assign({}, this.filters);\n      if (filters.hasOwnProperty('_domain')) {\n        delete filters._domain;\n      }\n      return prevArr.concat(this.applyFilters(nextObj.getNodes(), filters));\n    }, []);\n  }\n\n  /**\n   * mergeGroups - merge groups from data passed directly to the draw method\n   *\n   * @param {object} nodes - a grouping of nodes\n   */\n  mergeGroups() {\n    throw new Error('mergeGroups must be implemented.');\n  }\n\n  /**\n   * addFilter - add a filter to the chart\n   *\n   * @param {string} name - the name of the filter\n   * @param {function} fn - the function to be applied to the data\n   * @return {object} this\n   */\n  addFilter(name, fn) {\n    this.filters[name] = _.bind(fn, this);\n    return this;\n  }\n\n  /**\n   * removeFilter - removes a filter from the chart\n   *\n   * @param {string} name - the name of the filter\n   * @return {object} this\n   */\n  removeFilter(name) {\n    if (this.filters[name] !== 'undefined') {\n      delete this.filters[name];\n    }\n    return this;\n  }\n\n  /**\n   * resetZoom - resets the zoom of the axes\n   *\n   */\n  resetZoom() {\n    if (this.zoom) {\n      return this.zoom.reset();\n    }\n  }\n}\n\n\nmodule.exports = Chart;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Chart.js","const d3 = require('d3');\nconst _ = require('underscore');\n\nclass Tooltip {\n  /**\n   * Tooltip - allows for an HTML div to be faded in/out on mouseover of a marker\n   *\n   * @param {object} plot - the plot append the tooltip\n   * @param {object} options - the options for the plot\n   * @param {object} options.tooltip - the options for the tooltip\n   * @param {number} options.opacity - the opacity of the tooltip\n   * @param {object} options.template - an underscore compiled template\n   * @return {object} this\n   */\n  constructor(plot, options) {\n    this.tooltipOpts = options.tooltip || {\n      'opacity': 1,\n      'template': _.template('<span style=\"font-weight: bold;\"><%= obj.id %></span><p>x1: <%= obj.x1 %> x2: <% if (obj.x2) { %> <%= obj.x2 %> <% } %> y: <%= obj.y1 %></p>'),\n    };\n    this.template = this.tooltipOpts.template || _.template('<span style=\"font-weight: bold;\"><%= obj.id %></span><p>x1: <%= obj.x1 %> x2: <%= obj.x2 %> y: <%= obj.y1 %></p>');\n    this.opacity = this.tooltipOpts.opacity || 1;\n    this.element = d3.select('body').append('div').attr('class', 'd3cf-tooltip').style('opacity', 0).html(this.template({}));\n    return this;\n  }\n\n  /**\n   * mouseover - unbound method for mouseover event\n   *\n   * @param {object} d - the data\n   * @param {number} x - the x coordinate\n   * @param {number} y - the y coordinate\n   * @return {object} this\n   */\n  mouseover(d, x, y) {\n    const box = this.element.node().getBoundingClientRect();\n    if ((x + box.width) >= (window.innerWidth - 20)) {\n      this.element.html(this.template(d)).style('left', `${((x - 10) - Math.floor(box.width))}px`).style('top', `${y}px`);\n    } else {\n      this.element.html(this.template(d)).style('left', `${(x + 10)}px`).style('top', `${y}px`);\n    }\n    this.element.transition().duration(200).style('opacity', this.opacity);\n    return this;\n  }\n\n  /**\n   * mouseout - unbound method for mouseout event\n   *\n   * @return {object} this\n   */\n  mouseout() {\n    this.element.transition().duration(500).style('opacity', 0);\n    return this;\n  }\n\n  /**\n   * remove - removes the element from the DOM\n   *\n   */\n  remove() {\n    return this.element.remove();\n  }\n}\n\nmodule.exports = Tooltip;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Tooltip.js","const d3 = require('d3');\nconst _ = require('underscore');\n\nconst MINIMUM_ZOOM_THRESHOLD = 5;\n\nclass Zoom {\n  /**\n   * Zoom - a zoomable interface for a plot\n   *\n   * @param {object} plot - the plot to enable the zooming interface\n   * @param {object} options - the object containing the passed in options to the plot constructor\n   * @return {object} this\n   */\n  constructor(plot, options) {\n    this.plot = plot;\n    this.options = options;\n    this.bandPos = [-1, -1];\n    this.zoomArea = {\n      x1: 0,\n      y1: 0,\n      x2: 0,\n      y2: 0,\n    };\n    this.drag = d3.drag();\n    this.zoomGroup = plot.container.append('g').attr('class', 'd3cf-zoom');\n    this.zoomBand = this.zoomGroup.append('rect').attr('width', 0).attr('height', 0).attr('x', 0).attr('y', 0).attr('class', 'd3cf-zoomBand');\n    this.zoomOverlay = this.zoomGroup.append('rect').attr('width', plot.getWidth()).attr('height', plot.getHeight()).attr('transform', `translate(${plot.margins.left}, 0)`).attr('class', 'd3cf-zoomOverlay').call(this.drag);\n    this.isZoomed = false;\n    const self = this; // eslint-disable-line consistent-this\n    this.drag.on('start.plot', function() { // eslint-disable-line func-names\n      // Note: @ (this) is not the Zoom class but the DOM event\n      const pos = d3.mouse(this); // eslint-disable-line no-invalid-this\n      self.dragStart = pos;\n    });\n    this.drag.on('drag.plot', function() { // eslint-disable-line func-names\n      // Note: @ (this) is not the Zoom class but the DOM event\n      const pos = d3.mouse(this); // eslint-disable-line no-invalid-this\n      _.bind(self.ondrag, self)(pos);\n    });\n    this.drag.on('end.plot', function() { // eslint-disable-line func-names\n      // Note: @ (this) is not the Zoom class but the DOM event\n      const pos = d3.mouse(this); // eslint-disable-line no-invalid-this\n      let zoomX = false;\n      if (Math.abs(self.dragStart[0] - pos[0]) > MINIMUM_ZOOM_THRESHOLD) {\n        zoomX = true;\n      }\n      let zoomY = false;\n      if (Math.abs(self.dragStart[1] - pos[1]) > MINIMUM_ZOOM_THRESHOLD) {\n        zoomY = true;\n      }\n      _.bind(self.ondragend, self)(pos, zoomX && zoomY);\n    });\n  }\n\n  /**\n   * ondrag - the event handler for the ondrag event\n   * @param {array} pos, the x,y position of the mouse\n   */\n  ondrag(pos) {\n    if (pos[0] < this.bandPos[0]) {\n      this.zoomBand.attr('transform', `translate(${(pos[0] + this.plot.margins.left)}, ${this.bandPos[1]})`);\n    }\n    if (pos[1] < this.bandPos[1]) {\n      this.zoomBand.attr('transform', `translate(${(pos[0] + this.plot.margins.left)}, ${pos[1]})`);\n    }\n    if (pos[1] < this.bandPos[1] && pos[0] > this.bandPos[0]) {\n      this.zoomBand.attr('transform', `translate(${(this.bandPos[0] + this.plot.margins.left)}, ${pos[1]})`);\n    }\n    if (this.bandPos[0] === -1) {\n      this.bandPos = pos;\n      this.zoomBand.attr('transform', `translate(${(this.bandPos[0] + this.plot.margins.left)}, ${this.bandPos[1]})`);\n    }\n    this.zoomBand.transition().duration(1).attr('width', Math.abs(this.bandPos[0] - pos[0])).attr('height', Math.abs(this.bandPos[1] - pos[1]));\n  }\n\n  /**\n   * ondragend - the event handler for the ondragend event\n   *\n   * @param {array} pos - the x,y position of the mouse\n   */\n  ondragend(pos, zoom) {\n    const x1 = this.plot.axes.xScale.invert(this.bandPos[0]);\n    const x2 = this.plot.axes.xScale.invert(pos[0]);\n    if (x1 < x2) {\n      this.zoomArea.x1 = x1;\n      this.zoomArea.x2 = x2;\n    } else {\n      this.zoomArea.x1 = x2;\n      this.zoomArea.x2 = x1;\n    }\n    const y1 = this.plot.axes.yScale.invert(pos[1]);\n    const y2 = this.plot.axes.yScale.invert(this.bandPos[1]);\n    if (y1 < y2) {\n      this.zoomArea.y1 = y1;\n      this.zoomArea.y2 = y2;\n    } else {\n      this.zoomArea.y1 = y2;\n      this.zoomArea.y2 = y1;\n    }\n    this.bandPos = [-1, -1];\n    this.zoomBand.transition().attr('width', 0).attr('height', 0).attr('x', this.bandPos[0]).attr('y', this.bandPos[1]);\n    if (zoom) {\n      this.zoom();\n    }\n  }\n\n  /**\n   * zoom - the zooming method called an the end of ondragend\n   *\n   */\n  zoom() {\n    this.isZoomed = true;\n    this.plot.axes.zoom(this.zoomArea);\n    this.plot.draw();\n  }\n\n  /**\n   * resetZoom - reset the plot zoom back to the original viewBox\n   *\n   */\n  reset() {\n    this.isZoomed = false;\n    this.plot.axes.reset();\n    this.plot.draw();\n  }\n\n  /**\n   * remove - remove the zoom interface from a plot\n   *\n   */\n  remove() {\n    this.zoomGroup.remove();\n    this.drag.on('drag.plot', null);\n    this.drag.on('end.plot', null);\n    this.drag.on('start.plot', null);\n  }\n}\n\n\nmodule.exports = Zoom;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Zoom.js","const _ = require('underscore');\n\nimport Chart from './Chart';\nimport BarGroup from './groups/BarGroup';\n\n\nclass BarChart extends Chart {\n  /**\n   * BarChart - constructs the root SVG element to contain the BarChart\n   * @param {object} options, the options to create a BarChart\n   * @param {string} containerID, the id of the BarChart container div\n   * @param {string} svgcontainerClass, the desired class of the constructed svg element\n   * @param {object} tooltip,\n   * @param {number} tooltip.opacity, the background opacity for the tooltip\n   * @param {object} tooltip.template, the compiled template\n   * @param {boolean} scale, scale the svg on window resize @default false\n   * @param {boolean} resize, resize the svg on window resize @default true\n   * @returns {object} this, returns self\n   */\n  constructor(options) {\n    super(options);\n    this.init();\n    return this;\n  }\n\n  /**\n   * init - method to set/re-set the resizeHandler\n   * @returns {object} this\n   */\n  init() {\n    super.init();\n    const resizeEnabled = this.options.resize || true;\n    if (resizeEnabled) {\n      this.resizeHandler = _.debounce(_.bind(this.resize, this), 500);\n      return window.addEventListener('resize', this.resizeHandler);\n    }\n  }\n\n  /**\n   * draw - draw using d3 select.data.enter workflow\n   * @param {array} data, an array of {object} for each marker\n   * @returns {object} this\n   */\n  draw(data) {\n    super.draw(data);\n    const groups = this.groups.selectAll('.group').data(this.getGroups(), (d) => {\n      return d.id;\n    });\n    groups.enter().append((group) => {\n      return group.detached();\n    });\n    groups.each((group) => {\n      return group.update();\n    });\n    groups.exit().remove();\n    return this;\n  }\n\n  /**\n   * defaultGroup - creates a default group if an array is passed to the draw method\n   * @param {array} nodes, an array of Node's\n   */\n  defaultGroup(nodes) {\n    let group = this.getGroups().find((g) => {\n      return g.id === 'default_';\n    });\n    if (typeof group === 'undefined') {\n      if (this.options.group && this.options.group.onEnter) {\n        group = new BarGroup(this, {id: 'default_', onEnter: this.options.group.onEnter});\n      } else {\n        group = new BarGroup(this, {id: 'default_'});\n      }\n    }\n    nodes.forEach((d) => {\n      return group.addNode(d);\n    });\n    return group;\n  }\n\n  /**\n   * mergeGroups - merge groups from data passed directly to the draw method\n   * @override\n   * @param {object} groups, a set of Groups\n   * @return {boolean} hasChanged\n   */\n  mergeGroups(groups) {\n    const notMerged = Object.keys(this.groups_);\n    let addedNewGroup = false;\n    Object.keys(groups).forEach((k) => {\n      let idx = -1;\n      let group = this.groups_[k];\n      if (typeof group === 'undefined') {\n        addedNewGroup = true;\n        if (groups[k] instanceof BarGroup) {\n          group = groups[k];\n          this.addGroup(group);\n        } else {\n          // TODO: allow the user to pass in an object with `data` array\n          throw new Error('Must be instance of a d3cf Group.');\n        }\n      } else {\n        idx = notMerged.indexOf(k);\n        if (idx >= 0) {\n          notMerged.splice(idx, 1);\n          // merge new group data into the existing group\n          groups[k].getNodes().forEach((n) => {\n            group.addNode(n);\n          });\n        }\n      }\n    });\n    // remove the groups that have not been sliced\n    if (notMerged.length > 0) {\n      notMerged.forEach((k) => {\n        this.removeGroup(k);\n      });\n      // if we have removed an existing group\n      return true;\n    }\n    // if we have merged in new groups\n    if (addedNewGroup) {\n      return true;\n    }\n    // otherwise no change\n    return false;\n  }\n\n  /**\n   * update the dimensions of the chart (axes, gridlines, then redraw)\n   * @param {array} data, an array of {object} for each marker\n   * @returns {object} this\n   */\n  update(data) {\n    super.update(data);\n    this.draw(data);\n    return this;\n  }\n\n  /**\n   * remove - removes the chart from the DOM and any event listeners\n   * @return {object} this\n   */\n  remove() {\n    super.remove();\n    if (this.resizeHandler) {\n      window.removeEventListener('resize', this.resizeHandler);\n    }\n    return this;\n  }\n\n  /**\n   * resize - re-renders the chart\n   * @return {object} this\n   */\n  resize() {\n    this.update();\n    return this;\n  }\n}\n\n\nmodule.exports = BarChart;\n\n\n\n// WEBPACK FOOTER //\n// ./src/BarChart.js","const _ = require('underscore');\n\nimport Chart from './Chart';\nimport NodeGroup from './groups/NodeGroup';\n\n\nclass ScatterPlot extends Chart {\n  /**\n   * ScatterPlot - constructs the root SVG element to contain the ScatterPlot\n   *\n   * @param {object} options - the options to create a ScatterPlot\n   * @param {string} containerID - the id of the ScatterPlot container div\n   * @param {string} svgcontainerClass - the desired class of the constructed svg element\n   * @param {object} tooltip\n   * @param {number} tooltip.opacity - the background opacity for the tooltip\n   * @param {object} tooltip.template - the compiled template\n   * @param {boolean} scale - scale the svg on window resize @default false\n   * @param {boolean} resize - resize the svg on window resize @default true\n   * @returns {object} this - returns self\n   */\n  constructor(options) {\n    super(options);\n    this.init();\n    return this;\n  }\n\n  /**\n   * init - method to set/re-set the resizeHandler\n   *\n   * @returns {object} this\n   */\n  init() {\n    super.init();\n    const resizeEnabled = this.options.resize || true;\n    if (resizeEnabled) {\n      this.resizeHandler = _.debounce(_.bind(this.resize, this), 500);\n      return window.addEventListener('resize', this.resizeHandler);\n    }\n  }\n\n  /**\n   * draw - draw using d3 select.data.enter workflow\n   *\n   * @param {array} data - an array of {object} for each marker\n   * @returns {object} this\n   */\n  draw(data) {\n    super.draw(data);\n    const groups = this.groups.selectAll('.group').data(this.getGroups(), (d) => {\n      return d.id;\n    });\n    groups.enter().append((group) => {\n      return group.detached();\n    });\n    groups.each((group) => {\n      return group.update();\n    });\n    groups.exit().remove();\n    return this;\n  }\n\n  /**\n   * defaultGroup - creates a default group if an array is passed to the draw method\n   *\n   * @param {array} nodes - an array of Node's\n   */\n  defaultGroup(nodes) {\n    let group = this.getGroups().find((g) => {\n      return g.id === 'default_';\n    });\n    if (typeof group === 'undefined') {\n      if (this.options.group && this.options.group.onEnter) {\n        group = new NodeGroup(this, {id: 'default_', onEnter: this.options.group.onEnter});\n      } else {\n        group = new NodeGroup(this, {id: 'default_'});\n      }\n    }\n    nodes.forEach((d) => {\n      return group.addNode(d);\n    });\n    return group;\n  }\n\n  /**\n   * mergeGroups - merge groups from data passed directly to the draw method\n   *\n   * @param {object} groups - a set of Groups\n   * @return {boolean} shouldReset - should the axes domain be reset to currentMinMax\n   */\n  mergeGroups(groups) {\n    const notMerged = Object.keys(this.groups_);\n    let addedNewGroup = false;\n    Object.keys(groups).forEach((k) => {\n      let idx = -1;\n      let group = this.groups_[k];\n      if (typeof group === 'undefined') {\n        addedNewGroup = true;\n        if (groups[k] instanceof NodeGroup) {\n          group = groups[k];\n          this.addGroup(group);\n        } else {\n          // TODO: allow the user to pass in an object with `data` array\n          throw new Error('Must be instance of a d3cf Group.');\n        }\n      } else {\n        idx = notMerged.indexOf(k);\n        if (idx >= 0) {\n          notMerged.splice(idx, 1);\n          // merge new group data into the existing group\n          groups[k].getNodes().forEach((n) => {\n            group.addNode(n);\n          });\n        }\n      }\n    });\n    // remove the groups that have not been sliced\n    if (notMerged.length > 0) {\n      notMerged.forEach((k) => {\n        this.removeGroup(k);\n      });\n      // if we have removed an existing group from the plot\n      // then we should set the axes to the currentMinMax\n      return true;\n    }\n    // if we have merged in new groups and the axes have been initialized\n    // then we should set the axes to the currentMinMax\n    if (addedNewGroup && this.axes.initialized === true) {\n      return true;\n    }\n    // do not set the axes\n    return false;\n  }\n\n  /**\n   * update the dimensions of the plot (axes, gridlines, then redraw)\n   *\n   * @param {array} data - an array of {object} for each marker\n   * @returns {object} this\n   */\n  update(data) {\n    super.update(data);\n    this.draw(data);\n    return this;\n  }\n\n  /**\n   * remove - removes the plot from the DOM and any event listeners\n   *\n   * @return {object} this\n   */\n  remove() {\n    if (this.resizeHandler) {\n      window.removeEventListener('resize', this.resizeHandler);\n    }\n    return this;\n  }\n\n  /**\n   * resize - re-renders the plot\n   *\n   * @return {object} this\n   */\n  resize() {\n    this.update();\n    return this;\n  }\n\n  /**\n   * resetZoom - resets the zoom of the axes\n   *\n   */\n  resetZoom() {\n    if (this.zoom) {\n      return this.zoom.reset();\n    }\n  }\n}\n\n\nmodule.exports = ScatterPlot;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ScatterPlot.js","const _ = require('underscore');\n\nimport Chart from './Chart';\nimport LineGroup from './groups/LineGroup';\n\n\nclass LineChart extends Chart {\n  /**\n   * LineChart - constructs the root SVG element to contain the LineChart\n   * @param {object} options, the options to create a LineChart\n   * @param {string} containerID, the id of the LineChart container div\n   * @param {string} svgcontainerClass, the desired class of the constructed svg element\n   * @param {object} tooltip,\n   * @param {number} tooltip.opacity, the background opacity for the tooltip\n   * @param {object} tooltip.template, the compiled template\n   * @param {boolean} scale, scale the svg on window resize @default false\n   * @param {boolean} resize, resize the svg on window resize @default true\n   * @returns {object} this, returns self\n   */\n  constructor(options) {\n    super(options);\n    this.init();\n    return this;\n  }\n\n  /**\n   * init - method to set/re-set the resizeHandler\n   * @returns {object} this\n   */\n  init() {\n    super.init();\n    const resizeEnabled = this.options.resize || true;\n    if (resizeEnabled) {\n      this.resizeHandler = _.debounce(_.bind(this.resize, this), 500);\n      return window.addEventListener('resize', this.resizeHandler);\n    }\n  }\n\n  /**\n   * draw - draw using d3 select.data.enter workflow\n   * @param {array} data, an array of {object} for each marker\n   * @returns {object} this\n   */\n  draw(data) {\n    super.draw(data);\n    const groups = this.groups.selectAll('.group').data(this.getGroups(), (d) => {\n      return d.id;\n    });\n    groups.enter().append((group) => {\n      return group.detached();\n    });\n    groups.each((group) => {\n      return group.update();\n    });\n    groups.exit().remove();\n    return this;\n  }\n\n  /**\n   * defaultGroup - creates a default group if an array is passed to the draw method\n   * @param {array} nodes, an array of Node's\n   */\n  defaultGroup(nodes) {\n    let group = this.getGroups().find((g) => {\n      return g.id === 'default_';\n    });\n    if (typeof group === 'undefined') {\n      if (this.options.group && this.options.group.onEnter) {\n        group = new LineGroup(this, {id: 'default_', onEnter: this.options.group.onEnter});\n      } else {\n        group = new LineGroup(this, {id: 'default_'});\n      }\n    }\n    nodes.forEach((d) => {\n      return group.addNode(d);\n    });\n    return group;\n  }\n\n  /**\n   * mergeGroups - merge groups from data passed directly to the draw method\n   * @override\n   * @param {object} groups, a set of Groups\n   * @return {boolean} hasChanged\n   */\n  mergeGroups(groups) {\n    const notMerged = Object.keys(this.groups_);\n    let addedNewGroup = false;\n    Object.keys(groups).forEach((k) => {\n      let idx = -1;\n      let group = this.groups_[k];\n      if (typeof group === 'undefined') {\n        addedNewGroup = true;\n        if (groups[k] instanceof LineGroup) {\n          group = groups[k];\n          this.addGroup(group);\n        } else {\n          // TODO: allow the user to pass in an object with `data` array\n          throw new Error('Must be instance of a d3cf Group.');\n        }\n      } else {\n        idx = notMerged.indexOf(k);\n        if (idx >= 0) {\n          notMerged.splice(idx, 1);\n          // merge new group data into the existing group\n          groups[k].getNodes().forEach((n) => {\n            group.addNode(n);\n          });\n        }\n      }\n    });\n    // remove the groups that have not been sliced\n    if (notMerged.length > 0) {\n      notMerged.forEach((k) => {\n        this.removeGroup(k);\n      });\n      // if we have removed an existing group\n      return true;\n    }\n    // if we have merged in new groups\n    if (addedNewGroup) {\n      return true;\n    }\n    // otherwise no change\n    return false;\n  }\n\n  /**\n   * update the dimensions of the chart (axes, gridlines, then redraw)\n   * @param {array} data, an array of {object} for each marker\n   * @returns {object} this\n   */\n  update(data) {\n    super.update(data);\n    this.draw(data);\n    return this;\n  }\n\n  /**\n   * remove - removes the chart from the DOM and any event listeners\n   * @return {object} this\n   */\n  remove() {\n    super.remove();\n    if (this.resizeHandler) {\n      window.removeEventListener('resize', this.resizeHandler);\n    }\n    return this;\n  }\n\n  /**\n   * resize - re-renders the chart\n   * @return {object} this\n   */\n  resize() {\n    this.update();\n    return this;\n  }\n}\n\n\nmodule.exports = LineChart;\n\n\n\n// WEBPACK FOOTER //\n// ./src/LineChart.js"],"sourceRoot":""}