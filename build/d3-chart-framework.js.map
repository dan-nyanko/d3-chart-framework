{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b8f2f45109693d65909a","webpack:///./src/index.js","webpack:///./src/Axes.js","webpack:///./src/Grid.js","webpack:///external \"d3\"","webpack:///external \"underscore\"","webpack:///external \"moment\"","webpack:///./src/Errors.js","webpack:///./src/groups/Group.js","webpack:///./src/nodes/Node.js","webpack:///./src/groups/LineGroup.js","webpack:///./src/groups/NodeGroup.js","webpack:///./src/nodes/LineNode.js","webpack:///./src/nodes/RectNode.js","webpack:///./src/nodes/SegmentNode.js","webpack:///./src/Chart.js","webpack:///./src/Tooltip.js","webpack:///./src/Zoom.js","webpack:///./src/ScatterPlot.js","webpack:///./src/LineChart.js"],"names":["default","InvalidNodeError","InvalidGroupError","d3","require","_","moment","getDatetimeUnit","min","max","diff","unit","Axes","chart","options","x","title","type","y","grid","filter","initialized","useAutoPadding","initialMinMax","currentMinMax","draw","xDomain","yDomain","xScale","scaleTime","domain","range","getWidth","nice","scaleLinear","xAxis","axisBottom","scale","ticks","tickFormat","timeFormat","formatDate","xGroup","container","append","attr","margins","left","getHeight","call","selectAll","style","yScale","yAxis","axisLeft","yGroup","padding","xLabel","width","right","bottom","text","yLabel","height","top","data","xMin","xMax","x1","pluck","x2","minDatetime","length","maxDatetime","isNaN","minNumeric","maxNumeric","yMin","yMax","addFilter","d","Date","getTime","y1","y2","hasOwnProperty","newMinMax","shouldSetDomain","remove","setDomain","zoomArea","trans","transition","duration","asDays","m","Math","floor","l","String","split","p","pow","add","valueOf","subtract","module","exports","Grid","axes","plot","init","xGrid","tickSize","insert","yGrid","message","message_","Error","genId","prefix","random","toString","substr","Group","id","onEnter","bind","onUpdate","onExit","nodes_","Object","values","node","group","select","document","createElementNS","namespaces","svg","update","removeLayer","nodes","Node","meta","o","LineGroup","s","w","defaultGenerator","line","generator","filtered","applyFilters","getNodes","path","datum","exit","enter","detached","each","NodeGroup","LineNode","r","fill","circle","on","tooltip","mouseover","event","pageX","pageY","mouseout","MINIMUM_MARKER_WIDTH","MINIMUM_MARKER_HEIGHT","RectNode","h","f","rect","MINIMUM_LINE_STROKE","MINIMUM_CIRCLE_RADIUS","MINIMUM_LINE_THRESHOLD","SegmentNode","orderedPair","linePairs","lineDistance","distance","totalRange","linePercentage","startPoint","filteredOrderedPair","start","radius","ceil","endPoint","end","pairs","sqrt","abs","segments","groups","segmentsByHeightAndCumulative","groupBy","segment","c","cumulative","keys","forEach","key","sort","a","b","i","points","groupName","lastIdx","lastPoint","push","MINIMUM_CHART_HEIGHT","Chart","drawn","filters","groups_","setDimensions","root","containerID","viewBoxWidth","viewBoxHeight","svgContainerClass","zoomEnabled","zoom","getElementById","offsetWidth","getGroupsNodes","Array","setInitialMinMax","shouldSetInitialMinMax","mergeGroups","getGroupsSize","showWarn","defaultGroup","size","removeWarn","filters_","valid","keysLen","warn","resizeHandler","shouldFilter","getGroups","reduce","prev","nextObj","assign","_domain","prevArr","concat","name","fn","reset","Tooltip","tooltipOpts","template","opacity","element","html","box","getBoundingClientRect","window","innerWidth","MINIMUM_ZOOM_THRESHOLD","Zoom","bandPos","drag","zoomGroup","zoomBand","zoomOverlay","isZoomed","self","pos","mouse","dragStart","ondrag","zoomX","zoomY","ondragend","invert","ScatterPlot","resizeEnabled","resize","debounce","addEventListener","find","g","addNode","notMerged","addedNewGroup","k","idx","addGroup","indexOf","splice","n","removeGroup","removeEventListener","LineChart"],"mappings":"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","file":"d3-chart-framework.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"), require(\"underscore\"), require(\"moment\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"d3-chart-framework\", [\"d3\", \"underscore\", \"moment\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"d3-chart-framework\"] = factory(require(\"d3\"), require(\"underscore\"), require(\"moment\"));\n\telse\n\t\troot[\"d3-chart-framework\"] = factory(root[\"d3\"], root[\"underscore\"], root[\"moment\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b8f2f45109693d65909a","export { default as Axes } from './Axes';\nexport { InvalidNodeError, InvalidGroupError } from './Errors';\nexport { default as Grid } from './Grid';\nexport { default as Group } from './groups/Group';\nexport { default as LineGroup } from './groups/LineGroup';\nexport { default as NodeGroup } from './groups/NodeGroup';\nexport { default as Node } from './nodes/Node';\nexport { default as LineNode } from './nodes/LineNode';\nexport { default as RectNode } from './nodes/RectNode';\nexport { default as SegmentNode } from './nodes/SegmentNode';\nexport { default as Plot } from './Chart';\nexport { default as ScatterPlot } from './ScatterPlot';\nexport { default as LineChart } from './LineChart';\nexport { default as Tooltip } from './Tooltip';\nexport { default as Zoom } from './Zoom';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","const d3 = require('d3');\nconst _ = require('underscore');\nconst moment = require('moment');\n\nimport Grid from './Grid';\n\n/*\n* getDatetimeUnit - determine the unit of time for padding the axis\n* @param {object} min, the min moment datetime object\n* @param {object} max, the max moment datetime object\n* @return {string} the datetime unit {day, week, month}\n*/\nfunction getDatetimeUnit(min, max) {\n  const diff = max.diff(min, 'days');\n  let unit = 'month';\n  if (diff <= 14) {\n    unit = 'day';\n  } else if (diff > 14 && diff <= 183) {\n    unit = 'week';\n  }\n  return unit;\n}\n\nclass Axes {\n  /*\n  * Axes\n  * constructs 2d cartesian axes, appends to the container SVG element of the chart\n  * @param {object} chart, the chart to append the axis\n  * @param {object} options, the properties for the axis\n  * @param {boolean} grid, should the grid be displayed?\n  * X axis properties\n  * @param {object} options.axes.x, the properties for x axis\n  * @param {string} options.axes.x.title, the title of the x axis\n  * @param {string} options.axes.x.type, the datatype of the x axis {numeric, datetime}\n  * Y axis properties\n  * @param {object} options.axes.y, the properties for y axis\n  * @param {string} options.axes.y.title, the title of the y axis\n  * @param {string} options.axes.y.type, the datatype of the y axis {numeric, datetime}\n  * @returns {object} this, returns self\n  * example usage:\n  *  with an instance of a chart:\n  ```\n  axes = new Axes(plot, {\n    axes: {\n      grid: true,\n      x: {\n        title: 'Time',\n        type: 'datetime',\n        minMax: [1443371126, 1474993537]\n      },\n      y: {\n        title: 'Incidents',\n        type: 'numeric',\n        minMax: [0, 100]\n      },\n    }\n  })\n  ```\n  */\n  constructor(chart, options) {\n    this.chart = chart;\n    this.options = options || {x: {title: 'x', type: 'numeric'}, y: {title: 'y', type: 'numeric'}, grid: true, filter: true};\n    this.initialized = false;\n    this.useAutoPadding = options.useAutoPadding || false;\n    this.initialMinMax = [[0, 0], [0, 0]];\n    this.currentMinMax = [[0, 0], [0, 0]];\n    this.draw();\n  }\n\n  /*\n  * init - initialize the plot x,y axes\n  * @param {array} xDomain, the zoom xDomain or undefined\n  * @param {array} yDomain, the zoom yDomain or undefined\n  */\n  draw(xDomain, yDomain) {\n    if (this.options.x.type === 'datetime') {\n      if (xDomain) {\n        this.xScale = d3.scaleTime().domain(xDomain).range([0, this.chart.getWidth()]).nice();\n      } else {\n        this.xScale = d3.scaleTime().domain(this.currentMinMax[0]).range([0, this.chart.getWidth()]).nice();\n      }\n    } else {\n      if (xDomain) {\n        this.xScale = d3.scaleLinear().domain(xDomain).range([0, this.chart.getWidth()]);\n      } else {\n        this.xScale = d3.scaleLinear().domain(this.currentMinMax[0]).range([0, this.chart.getWidth()]);\n      }\n    }\n    if (this.options.x.type === 'datetime') {\n      this.xAxis = d3.axisBottom().scale(this.xScale).ticks(10).tickFormat(d3.timeFormat(this.formatDate()));\n    } else {\n      this.xAxis = d3.axisBottom().scale(this.xScale).ticks(10);\n    }\n    if (this.options.x.type === 'datetime') {\n      this.xGroup = this.chart.container.append('g').attr('class', 'x d3cf-axis').attr('transform', `translate(${this.chart.margins.left}, ${this.chart.getHeight()})`).call(this.xAxis);\n      this.xGroup.selectAll('text').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em').attr('transform', () => {\n        return 'rotate(-65)';\n      });\n    } else {\n      this.xGroup = this.chart.container.append('g').attr('class', 'x d3cf-axis').attr('transform', `translate(${this.chart.margins.left}, ${this.chart.getHeight()})`).call(this.xAxis);\n    }\n\n    if (yDomain) {\n      this.yScale = d3.scaleLinear().domain(yDomain).range([this.chart.getHeight(), 0]);\n    } else {\n      this.yScale = d3.scaleLinear().domain(this.currentMinMax[1]).range([this.chart.getHeight(), 0]);\n    }\n    this.yAxis = d3.axisLeft().scale(this.yScale);\n    this.yGroup = this.chart.container.append('g').attr('class', 'y d3cf-axis').attr('transform', `translate(${this.chart.margins.left}, 0)`).call(this.yAxis);\n    if (this.options.grid) {\n       this.grid = new Grid(this, this.chart);\n    }\n\n    let padding = 0;\n    if (this.options.x.type === 'datetime') {\n      padding = 45;\n    }\n\n    if (this.xLabel) {\n      // update\n      this.xLabel\n        .attr('dx', (this.chart.width / 2) - ((this.chart.margins.right + this.chart.margins.left) / 2))\n        .attr('dy', this.chart.margins.bottom);\n    } else {\n      // add\n      this.xLabel = this.chart.container\n        .append('g')\n          .attr('class', 'x d3cf-axis-label')\n          .attr('transform', `translate(${this.chart.margins.left}, ${this.chart.getHeight() + padding})`)\n        .append('text')\n          .attr('dx', (this.chart.width / 2) - ((this.chart.margins.right + this.chart.margins.left) / 2))\n          .attr('dy', this.chart.margins.bottom)\n          .attr('class', 'd3cf-axis-label')\n          .style('text-anchor', 'middle')\n          .text(() => {\n            return this.options.x.title || '';\n          });\n    }\n    if (this.yLabel) {\n      // update\n      this.yLabel\n        .attr('dx', -(this.chart.height / 2) + ((this.chart.margins.top + this.chart.margins.bottom) / 2))\n        .attr('dy', -this.chart.margins.left);\n    } else {\n      // add\n      this.yLabel = this.chart.container\n        .append('g')\n          .attr('class', 'y d3cf-axis-label')\n          .attr('transform', `translate(${this.chart.margins.left}, 0)`)\n        .append('text')\n          .attr('transform', 'rotate(-90)')\n          .attr('dx', -(this.chart.height / 2) + ((this.chart.margins.top + this.chart.margins.bottom) / 2))\n          .attr('dy', -this.chart.margins.left)\n          .attr('class', 'd3cf-axis-label')\n          .style('text-anchor', 'middle')\n          .text(() => {\n            return this.options.y.title;\n          });\n    }\n  }\n\n  /*\n  * setDomain - sets the x, y domains based on the passed in data\n  * @param {array} data, an array of {object} for each marker\n  */\n  setDomain(data) {\n    let xMin = 0;\n    let xMax = 0;\n    if (this.options.x.type === 'datetime') {\n      const x1 = _.pluck(data, 'x1');\n      const x2 = _.pluck(data, 'x2');\n      xMin = Axes.minDatetime(x1, this.useAutoPadding);\n      xMax = xMin;\n      if (x2.length > 0) {\n        xMax = Axes.maxDatetime(x2, this.useAutoPadding);\n      }\n      if (isNaN(xMax)) {\n        xMax = Axes.maxDatetime(x1, this.useAutoPadding);\n      }\n    } else {\n      const x1 = _.pluck(data, 'x1');\n      const x2 = _.pluck(data, 'x2');\n      xMin = Axes.minNumeric(x1, this.useAutoPadding);\n      xMax = xMin;\n      if (x2.length > 0) {\n        xMax = Axes.maxNumeric(x2, this.useAutoPadding);\n      }\n      if (isNaN(xMax)) {\n        xMax = Axes.maxNumeric(x1, this.useAutoPadding);\n      }\n    }\n\n    const yMin = 0;\n    const yMax = Axes.maxNumeric(_.pluck(data, 'y1'), this.useAutoPadding);\n    this.xScale.domain([xMin, xMax]);\n    this.yScale.domain([yMin, yMax]);\n    if (this.initialized === false) {\n      this.initialMinMax = [[xMin, xMax], [yMin, yMax]];\n      if (this.options.filter) {\n        this.chart.addFilter('_domain', (d) => {\n          // TODO: should this scope be the Plot or the Axes?\n          let x1 = this.xScale.domain()[0];\n          if (x1 instanceof Date) {\n            x1 = x1.getTime();\n          }\n          let x2 = this.xScale.domain()[1];\n          if (x2 instanceof Date) {\n            x2 = x2.getTime();\n          }\n          const y1 = this.yScale.domain()[0];\n          const y2 = this.yScale.domain()[1];\n          if (d.hasOwnProperty('x2')) {\n            if ((d.x1 >= x1 && d.x2 <= x2) && (d.y1 >= y1 && d.y1 <= y2)) {\n              return d;\n            }\n          } else {\n            if ((d.x1 >= x1) && (d.y1 >= y1 && d.y1 <= y2)) {\n              return d;\n            }\n          }\n        });\n      }\n    } else {\n      this.currentMinMax = [[xMin, xMax], [yMin, yMax]];\n    }\n    this.initialized = true;\n  }\n\n  /*\n  * setDomain - sets the x, y domains based on the passed in data\n  * @note this will overwrite the original x,y minMax options to the plot\n  * @param {array} data, an array of {object} for each marker\n  */\n  setInitialMinMax(newMinMax) {\n    this.initialMinMax = newMinMax;\n  }\n\n  /*\n  * update - update the x,y axes using the zoom domain\n  * @param {array} data, an array of {object} for each marker\n  * @param {boolean} shouldSetDomain, should the domain be set to data bounds\n  */\n  update(data, shouldSetDomain) {\n    this.remove();\n    if (data && shouldSetDomain) {\n      this.setDomain(data);\n    }\n    this.draw(this.xScale.domain(), this.yScale.domain());\n    return this;\n  }\n\n  /*\n  * reset - resets the x,y axes back to the original domain\n  */\n  reset() {\n    this.remove();\n    this.draw(this.initialMinMax[0], this.initialMinMax[1]);\n    return this;\n  }\n\n  /*\n  * zoom - zooms the x,y axes based on the zoomArea object\n  * @param {object} zoomArea, an object containing a bounding box of x,y coordinates\n  */\n  zoom(zoomArea) {\n    if (zoomArea.x1 > zoomArea.x2) {\n      this.xScale.domain([zoomArea.x2, zoomArea.x1]);\n    } else {\n      this.xScale.domain([zoomArea.x1, zoomArea.x2]);\n    }\n    if (this.options.x.type === 'datetime') {\n      this.xAxis.tickFormat(d3.timeFormat(this.formatDate()));\n    }\n    if (zoomArea.y1 > zoomArea.y2) {\n      this.yScale.domain([zoomArea.y2, zoomArea.y1]);\n    } else {\n      this.yScale.domain([zoomArea.y1, zoomArea.y2]);\n    }\n    const trans = this.chart.container.transition().duration(750);\n    this.xGroup.transition(trans).call(this.xAxis);\n    this.xGroup.selectAll('g').selectAll('text').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em').attr('transform', 'rotate(-65)');\n    this.yGroup.transition(trans).call(this.yAxis);\n    if (this.grid) {\n      this.grid.remove();\n      this.grid = new Grid(this, this.chart);\n    }\n    return this;\n  }\n\n  /*\n  * remove - removes the x,y axis groups from the plot\n  */\n  remove() {\n    this.xGroup.remove();\n    this.yGroup.remove();\n    if (this.grid) {\n      return this.grid.remove();\n    }\n  }\n\n  /*\n  * formatDate - a method that formats the axis date label\n  */\n  formatDate() {\n    const xDomain = this.xScale.domain();\n    const duration = moment.duration(moment(xDomain[1]).diff(xDomain[0])).asDays();\n    if (duration <= 7) {\n      return '%b %d - %H:%M';\n    }\n    return '%b %d, %Y';\n  }\n\n  /*\n  * maxNumeric - determine the maximum value with padding. Padding is determined\n  * by the number of digits ^ 10 / 10, unless number of digets == 10 then return\n  * 10\n  * @param {array} data, an array of positive integers\n  * @return {number} max\n  */\n  static maxNumeric(data, useAutoPadding) {\n    const m = Math.floor(_.max(data));\n    if (useAutoPadding) {\n      const l = String(m).split('').length;\n      if (l === 1) {\n        return 10;\n      }\n      const p = (Math.pow(10, l)) / 10;\n      return m + p;\n    }\n    return m;\n  }\n\n  /*\n  * minNumeric - determine the minimum value with padding. Padding is determined\n  * by the number of digits ^ 10 / 10, unless number of digets == 10 then return\n  * 10\n  * @param {array} data, an array of positive integers\n  * @return {number} max\n  */\n  static minNumeric(data, useAutoPadding) {\n    const m = Math.floor(_.min(data));\n    if (useAutoPadding) {\n      const l = String(m).split('').length;\n      if (l === 1) {\n        return 10;\n      }\n      const p = (Math.pow(10, l)) / 10;\n      return m + p;\n    }\n    return m;\n  }\n\n  /*\n  * maxDatetime - determine the maximum value with padding\n  * @param {array} data, an array of timestamps in milliseconds\n  * @return {number} max, maximum datetime value\n  */\n  static maxDatetime(data, useAutoPadding) {\n    const max = moment(_.max(data));\n    if (useAutoPadding) {\n      const min = moment(_.min(data));\n      const unit = getDatetimeUnit(min, max);\n      return moment(max).add(1, unit).valueOf();\n    }\n    return max.valueOf();\n  }\n\n  /*\n  * minDatetime - determine the minimum value with padding\n  * @param {array} data, an array of timestamps in milliseconds\n  * @return {number} min, minimum datetime value\n  */\n  static minDatetime(data, useAutoPadding) {\n    const min = moment(_.min(data));\n    if (useAutoPadding) {\n      const max = moment(_.max(data));\n      const unit = getDatetimeUnit(min, max);\n      return moment(min).subtract(1, unit).valueOf();\n    }\n    return min.valueOf();\n  }\n}\n\n\nmodule.exports = Axes;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Axes.js","const d3 = require('d3');\n\nclass Grid {\n  /*\n  * Grid - constructs grids lines for the plot\n  * @param {object} axes, the axes to determine xScale, yScale\n  * @param {object} plot, the plot to append the axis\n  * @param {object} options, the properties for the axis\n  * @returns {object} this\n  */\n  constructor(axes, plot, options) {\n    this.plot = plot;\n    this.options = options || {};\n    this.axes = axes;\n    this.init();\n    return this;\n  }\n\n  /*\n  * init - initialize the x,y grid lines for a plot\n  */\n  init() {\n    this.xGrid = d3.axisBottom().scale(this.axes.xScale).tickFormat('').tickSize((this.plot.getHeight()) * -1, 0, 0);\n    this.xGroup = this.plot.container.insert('g', ':first-child').attr('class', 'd3cf-grid').attr('transform', `translate(${this.plot.margins.left}, ${this.plot.getHeight()})`).attr('opacity', null).call(this.xGrid);\n    this.yGrid = d3.axisLeft().scale(this.axes.yScale).tickFormat('').tickSize((this.plot.getWidth()) * -1, 0, 0);\n    this.yGroup = this.plot.container.insert('g', ':first-child').attr('class', 'd3cf-grid').attr('transform', `translate(${this.plot.margins.left}, 0)`).attr('opacity', null).call(this.yGrid);\n  }\n\n  /*\n  * remove - removed the grid lines from the plot\n  */\n  remove() {\n    this.xGroup.remove();\n    this.yGroup.remove();\n  }\n}\n\nmodule.exports = Grid;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Grid.js","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3\"\n// module id = 3\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"underscore\"\n// module id = 4\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 5\n// module chunks = 0","/*\n* InvalidNodeError - error thrown when an object is not instanceof Node\n*\n* @param {string} [message], (optional) the message to the user\n*/\nexport class InvalidNodeError extends Error {\n  constructor(message) {\n    const message_ = message || 'Is not instanceof Node.';\n    super(message_);\n  }\n}\n\n/*\n* InvalidGroupError - error thrown when an object is not instanceof Group\n*\n* @param {string} [message], (optional) the message to the user\n*/\nexport class InvalidGroupError extends Error {\n  constructor(message) {\n    const message_ = message || 'Is not instanceof Group.';\n    super(message_);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Errors.js","const d3 = require('d3');\nconst _ = require('underscore');\n\nimport Node from '../nodes/Node';\nimport { InvalidNodeError } from '../Errors';\n\n\nfunction genId() {\n  const length = 9;\n  const prefix = 'group-';\n  return prefix + Math.random().toString(36).substr(2, length);\n}\n\nclass Group {\n  constructor(chart, options) {\n    this.options = options || {};\n    this.id = this.options.id || genId();\n    const onEnter = this.options.onEnter || Group.onEnter;\n    this.onEnter = _.bind(onEnter, this);\n    const onUpdate = this.options.onUpdate || Group.onUpdate;\n    this.onUpdate = _.bind(onUpdate, this);\n    const onExit = this.options.onExit || Group.onExit;\n    this.onExit = _.bind(onExit, this);\n    this.nodes_ = {};\n    this.chart = chart;\n    return this;\n  }\n\n  /*\n  * size - returns the size of the Group's nodes\n  * @return {number} size, the size of the group\n  */\n  size() {\n    return Object.values(this.nodes_).length;\n  }\n\n  /*\n  * addNode - adds a node to this group\n  * @param {object} node, the node to add\n  * @throws {InvalidGroupError} error\n  * @return {Group} this\n  */\n  addNode(node) {\n    if (typeof node === 'undefined' || !node instanceof Node) {\n      throw new InvalidNodeError();\n    }\n    this.nodes_[node.id] = node;\n    return this;\n  }\n\n  /*\n  * removeNode - removes a node from this group\n  * @param {string} id, the id to remove\n  * @return {object} this\n  */\n  removeNode(id) {\n    if (this.nodes_.hasOwnProperty(id)) {\n      delete this.nodes_[id];\n    }\n    return this;\n  }\n\n  /*\n  * getNodes - returns the nodes associated with this group\n  * @return {array} nodes, the nodes associated with this group\n  */\n  getNodes() {\n    return Object.values(this.nodes_);\n  }\n\n  /*\n  * update - handles updating the marker\n  * @return {object} this\n  */\n  update() {\n    throw new Error('Update must be implemented.');\n  }\n\n  /*\n  * detached - builds a detached svg group and returns the node\n  * @return {object} node, the SVG node to append to the parent during .call()\n  */\n  detached() {\n    this.remove();\n    this.group = d3.select(document.createElementNS(d3.namespaces.svg, 'g')).attr('id', this.id).attr('class', 'd3cf-group').remove();\n    this.update();\n    return this.group.node();\n  }\n\n  /*\n  * remove - removes the group from the DOM\n  */\n  remove() {\n    if (this.group) {\n      this.group.remove();\n    }\n  }\n\n  /*\n  * destroy - destroys the group and any associated elements\n  */\n  destroy() {\n    this.remove();\n    this.chart.removeLayer(this.id);\n    this.nodes = null;\n    this.chart = null;\n    this.group = null;\n  }\n\n  /*\n  * onEnter - the default event handler for a group. This may be overridden or\n  *   a new event handler passed into the constructor as `options.onEnter`\n  * @param {object} selections - the d3 selection object containing the children for this group\n  */\n  static onEnter() {}\n\n  /*\n  * onUpdate - the default event handler for a group. This may be overridden or\n  *   a new event handler passed into the constructor as `options.onUpdate`\n  * @param {object} selections - the d3 selection object for this group\n  */\n  static onUpdate() {}\n\n  /*\n  * onExit - the default event handler for a group. This may be overridden or\n  *   a new event handler passed into the constructor as `options.onExit`\n  * @param {object} selections - the d3 selection object for this group\n  */\n  static onExit() {}\n}\n\nmodule.exports = Group;\n\n\n\n// WEBPACK FOOTER //\n// ./src/groups/Group.js","const d3 = require('d3');\n\n\nfunction genId() {\n  const length = 9;\n  const prefix = 'node-';\n  return prefix + Math.random().toString(36).substr(2, length);\n}\n\nclass Node {\n  /*\n  * Node - base class\n  * @param {object} options, the options used to construct the SegmentMarker\n  * @param {object} options.meta, the optional meta data associated with the node (e.g. used in the Tooltip)\n  * @return {object} this\n  */\n  constructor(options) {\n    this.id = options.id || genId();\n    this.meta = options.meta || {};\n    this.group = null;\n    return this;\n  }\n\n  /*\n  * remove - removes the marker from the DOM\n  */\n  remove() {\n    if (this.group) {\n      return this.group.remove();\n    }\n  }\n\n  /*\n  * update - updates one or more elements within the RectNode SVG group\n  */\n  update() {\n    return this;\n  }\n\n  /*\n  * detached - builds a detached svg group and returns the node\n  * @return {object} node, the SVG node to append to the parent during .call()\n  */\n  detached() {\n    this.remove();\n    this.group = d3.select(document.createElementNS(d3.namespaces.svg, 'g')).attr('id', this.id).attr('class', 'd3cf-node').attr('opacity', this.o).remove();\n    this.update();\n    return this.group.node();\n  }\n\n}\n\n\nmodule.exports = Node;\n\n\n\n// WEBPACK FOOTER //\n// ./src/nodes/Node.js","const d3 = require('d3');\n\nimport Group from './Group';\n\n\nclass LineGroup extends Group {\n  constructor(chart, options) {\n    super(chart, options);\n    this.s = options.s || 'steelblue';\n    this.w = options.w || 1.5;\n    this.meta = options.meta || {};\n    const defaultGenerator = d3.line().x((d) => {\n      return this.chart.axes.xScale(d.x1);\n    }).y((d) => {\n      return this.chart.axes.yScale(d.y1);\n    });\n    this.generator = options.generator || defaultGenerator;\n    return this;\n  }\n\n  /*\n  * update - handles updating the marker\n  * @return {object} this\n  */\n  update() {\n    if (typeof this.group === 'undefined') {\n      return;\n    }\n    const filtered = this.chart.applyFilters(this.getNodes());\n    this.group.attr('numNodes', filtered.length);\n\n    const path = this.group.append('path')\n      .datum(filtered)\n      .attr('fill', 'none')\n      .attr('stroke', this.s)\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-width', this.w)\n      .attr('class', 'd3cf-line')\n      .attr('d', (d) => {\n        return this.generator(d);\n      })\n      .call(this.onEnter);\n    path.attr('stroke', this.s)\n      .attr('stroke-width', this.w)\n      .attr('d', (d) => {\n        return this.generator(d);\n      }).call(this.onUpdate);\n    path.exit().remove().call(this.onExit);\n    const nodes = this.group.selectAll('.node').data(filtered, (d) => {\n      return d.id;\n    });\n    nodes.enter().append((node) => {\n      return node.detached();\n    }).call(this.onEnter);\n    nodes.each((node) => {\n      return node.update();\n    }).call(this.onUpdate);\n    nodes.exit().remove().call(this.onExit);\n  }\n\n}\n\nmodule.exports = LineGroup;\n\n\n\n// WEBPACK FOOTER //\n// ./src/groups/LineGroup.js","import Group from './Group';\n\n\nclass NodeGroup extends Group {\n  constructor(chart, options) {\n    super(chart, options);\n    return this;\n  }\n\n  /*\n  * update - handles updating the marker\n  * @override\n  * @return {object} this\n  */\n  update() {\n    if (typeof this.group === 'undefined') {\n      return;\n    }\n    const filtered = this.chart.applyFilters(this.getNodes());\n    this.group.attr('numNodes', filtered.length);\n    const nodes = this.group.selectAll('.node').data(filtered, (d) => {\n      return d.id;\n    });\n    nodes.enter().append((node) => {\n      return node.detached();\n    }).call(this.onEnter);\n    nodes.each((node) => {\n      return node.update();\n    }).call(this.onUpdate);\n    nodes.exit().remove().call(this.onExit);\n  }\n\n}\n\nmodule.exports = NodeGroup;\n\n\n\n// WEBPACK FOOTER //\n// ./src/groups/NodeGroup.js","const d3 = require('d3');\n\nimport Node from './Node';\n\n\nclass LineNode extends Node {\n  /*\n  * LineNode - a data point for a path/line generator\n  * @param {object} chart, an instance of a chart\n  * @param {object} options, the options used to construct the plot\n  * @param {number} options.x1, the value for x1 position\n  * @param {number} options.y1, the value for y1 position\n  * @param {string} options.r, the radius of the circle\n  * @param {number} options.o, the opacity of the cirle\n  * @param {object} options.meta, the optional meta data associated with the circle (e.g. used in the Tooltip)\n  * @return {object} this\n  */\n  constructor(chart, options) {\n    super(chart, options);\n    this.chart = chart;\n    this.x1 = options.x1;\n    this.y1 = options.y1;\n    this.r = options.r || 3;\n    this.o = options.o || 0;\n    this.style = options.style || 'd3cf-node';\n    this.meta = options.meta || {};\n    return this;\n  }\n\n  getFill(type) {\n    let fill = '#33B5E';\n    switch (type) {\n      case 'warning':\n        fill = '#FFBB33';\n        break;\n      case 'success':\n        fill = '#00C851';\n        break;\n      case 'info':\n        fill = '#33B5E5';\n        break;\n      default:\n        break;\n    }\n    return fill;\n  }\n\n  /*\n  * update - updates one or more elements\n  */\n  update() {\n    if (typeof this.group === 'undefined') {\n      this.group = d3.select(`#${this.id}`);\n    }\n    /*\n    * Each node of the line's `path` (see LineGroup) is a transparent circle in\n    * order to have a mouseover event.\n    * @see https://groups.google.com/forum/#!topic/d3-js/gHzOj91X2NA\n    */\n    // select\n    const circle = this.group.selectAll('circle').data([this], (d) => {\n      return d.id;\n    });\n    // create\n    circle.enter().append('circle')\n      .attr('class', this.style)\n      .attr('cx', () => {\n        return this.chart.axes.xScale(this.x1);\n      }).attr('cy', () => {\n        return this.chart.axes.yScale(this.y1);\n      }).attr('r', () => {\n        return this.r;\n      }).attr('opacity', () => {\n        return this.o;\n      }).on('mouseover', () => {\n        if (this.chart.tooltip) {\n          return this.chart.tooltip.mouseover(this, d3.event.pageX, d3.event.pageY);\n        }\n      }).on('mouseout', () => {\n        if (this.chart.tooltip) {\n          return this.chart.tooltip.mouseout();\n        }\n      });\n    // update\n    circle.attr('cx', () => {\n      return this.chart.axes.xScale(this.x1);\n    }).attr('cy', () => {\n      return this.chart.axes.yScale(this.y1);\n    }).attr('r', () => {\n      return this.r;\n    }).attr('opacity', () => {\n      return this.o;\n    });\n    // remove\n    circle.exit().remove();\n    return this;\n  }\n\n}\n\n\nmodule.exports = LineNode;\n\n\n\n// WEBPACK FOOTER //\n// ./src/nodes/LineNode.js","const d3 = require('d3');\n\nimport Node from './Node';\n\n\nconst MINIMUM_MARKER_WIDTH = 10;\nconst MINIMUM_MARKER_HEIGHT = 10;\n\nclass RectNode extends Node {\n  /*\n  * RectNode - a rectangular node\n  * @param {object} plot, an instance of a plot\n  * @param {object} options, the options used to construct the plot\n  * @param {number} options.x1, the value for x1 position\n  * @param {number} options.x2, the value for x2 position\n  * @param {number} options.y1, the value for y1 position\n  * @param {number} options.h, the value for the height\n  * @param {string} options.f, the fill of the marker\n  * @param {number} options.o, the opacity of the marker\n  * @param {object} options.meta, the optional meta data associated with the marker (e.g. used in the Tooltip)\n  * @return {object} this\n  */\n  constructor(plot, options) {\n    super(options);\n    this.plot = plot;\n    this.x1 = options.x1;\n    this.x2 = options.x2;\n    this.y1 = options.y1;\n    this.h = options.h || 10;\n    this.f = options.f || '#345e7e';\n    this.o = options.o || 0.4;\n    this.style = options.style || 'd3cf-node';\n    return this;\n  }\n\n  /*\n  * update - updates one or more elements within the RectNode SVG group\n  */\n  update() {\n    if (typeof this.group === 'undefined') {\n      this.group = d3.select(`#${this.id}`);\n    }\n    // select\n    const rect = this.group.selectAll('rect').data([this], (d) => {\n      return d.id;\n    });\n    // create\n    rect.enter().append('rect').attr('class', this.style).attr('x', () => {\n      return this.plot.axes.xScale(this.x1);\n    }).attr('y', () => {\n      let height = this.h;\n      if (height < MINIMUM_MARKER_HEIGHT) {\n        height = MINIMUM_MARKER_HEIGHT;\n      }\n      return this.plot.axes.yScale(this.y1) - height / 2;\n    }).attr('width', () => {\n      let width = this.plot.axes.xScale(this.x2) - this.plot.axes.xScale(this.x1);\n      if (width < MINIMUM_MARKER_WIDTH) {\n        width = MINIMUM_MARKER_WIDTH;\n      }\n      return width;\n    }).attr('height', () => {\n      let height = this.h;\n      if (height < MINIMUM_MARKER_HEIGHT) {\n        height = MINIMUM_MARKER_HEIGHT;\n      }\n      return height;\n    }).style('fill', () => {\n      return this.f;\n    }).style('opacity', () => {\n      return this.o;\n    }).on('mouseover', () => {\n      if (this.plot.tooltip) {\n        return this.plot.tooltip.mouseover(this, d3.event.pageX, d3.event.pageY);\n      }\n    }).on('mouseout', () => {\n      if (this.plot.tooltip) {\n        return this.plot.tooltip.mouseout();\n      }\n    });\n\n    // update\n    rect.attr('x', () => {\n      return this.plot.axes.xScale(this.x1);\n    }).attr('y', () => {\n      let height = this.h;\n      if (height < MINIMUM_MARKER_HEIGHT) {\n        height = MINIMUM_MARKER_HEIGHT;\n      }\n      return this.plot.axes.yScale(this.y1) - height / 2;\n    }).attr('width', () => {\n      let width = this.plot.axes.xScale(this.x2) - this.plot.axes.xScale(this.x1);\n      if (width < MINIMUM_MARKER_WIDTH) {\n        width = MINIMUM_MARKER_WIDTH;\n      }\n      return width;\n    }).attr('height', () => {\n      let height = this.h;\n      if (height < MINIMUM_MARKER_HEIGHT) {\n        height = MINIMUM_MARKER_HEIGHT;\n      }\n      return height;\n    });\n\n    // remove\n    rect.exit().remove();\n    return this;\n  }\n}\n\n\nmodule.exports = RectNode;\n\n\n\n// WEBPACK FOOTER //\n// ./src/nodes/RectNode.js","import d3 from 'd3';\nimport _ from 'underscore';\nimport Node from './Node';\n\nconst MINIMUM_LINE_STROKE = 4;\nconst MINIMUM_CIRCLE_RADIUS = 5;\nconst MINIMUM_LINE_THRESHOLD = 2;\n\nclass SegmentNode extends Node {\n  /*\n  * SegmentNode - a line with beginning and end circles\n  * @param {object} plot, an instance of a plot\n  * @param {object} options, the options used to construct the SegmentNode\n  * @param {number} options.x, the value for x position\n  * @param {number} options.y, the value for y position\n  * @param {number} options.l, the value for the length of the line\n  * @param {number} options.h, the value for the height\n  * @param {string} options.f, the fill of the line\n  * @param {number} options.o, the opacity of the line\n  * @param {object} options.meta, the optional meta data associated with the node (e.g. used in the Tooltip)\n  * @return {object} this\n  */\n  constructor(plot, options) {\n    super(options);\n    this.plot = plot;\n    this.x = options.x;\n    this.y = options.y;\n    this.w = options.w;\n    this.h = options.h || MINIMUM_LINE_STROKE;\n    this.r = options.r || MINIMUM_CIRCLE_RADIUS;\n    this.f = options.f || '#345e7e';\n    this.o = options.o || 0.3;\n    this.meta = options.meta || {};\n    return this;\n  }\n\n  /*\n  * remove - removes the node from the DOM\n  * @return {object} this\n  */\n  remove() {\n    if (this.group) {\n      return this.group.remove();\n    }\n  }\n\n  /*\n  * filteredOrderedPair - determine if the pair exists within the domain\n  */\n  filteredOrderedPair(orderedPair) {\n    if (orderedPair[0] < this.plot.axes.xScale.range()[0]) {\n      orderedPair[0] = null;\n    }\n    if (orderedPair[0] > this.plot.axes.xScale.range()[1]) {\n      orderedPair[0] = null;\n    }\n    if (orderedPair[1] < this.plot.axes.yScale.range()[1]) {\n      orderedPair[1] = null;\n    }\n    if (orderedPair[1] > this.plot.axes.yScale.range()[0]) {\n      orderedPair[1] = null;\n    }\n    return orderedPair;\n  }\n\n  /*\n  * update - handles updating the node\n  * @return {object} this\n  */\n  update() {\n    if (typeof this.group === 'undefined') {\n      this.group = d3.select(`#${this.id}`);\n    }\n    const linePairs = [[this.plot.axes.xScale(this.x), this.plot.axes.yScale(this.y)], [this.plot.axes.xScale(this.w), this.plot.axes.yScale(this.y)]];\n    const lineDistance = this.distance(linePairs);\n    const totalRange = this.plot.axes.xScale.range()[1];\n    const linePercentage = Math.floor((lineDistance / totalRange) * 100);\n    const startPoint = this.filteredOrderedPair([this.plot.axes.xScale(this.x), this.plot.axes.yScale(this.y)]);\n    const start = this.group.selectAll('.start-circle').data([this], (d) => {\n      return d.id;\n    });\n    if (startPoint[0] !== null && startPoint[1] !== null) {\n      start.enter().append('circle').attr('class', 'start-circle').style('fill', this.f).attr('cx', startPoint[0]).attr('cy', startPoint[1]).attr('r', () => {\n        let radius = this.r;\n        radius = Math.ceil((radius * (linePercentage / 100)) + radius);\n        if (radius < MINIMUM_CIRCLE_RADIUS) {\n          radius = MINIMUM_CIRCLE_RADIUS;\n        }\n        return radius;\n      });\n      start.attr('cx', startPoint[0]).attr('cy', startPoint[1]).attr('r', () => {\n        let radius = this.r;\n        radius = Math.ceil((radius * (linePercentage / 100)) + radius);\n        if (radius < MINIMUM_CIRCLE_RADIUS) {\n          radius = MINIMUM_CIRCLE_RADIUS;\n        }\n        return radius;\n      });\n      start.exit().remove();\n    } else {\n      this.group.selectAll('.start-circle').remove();\n    }\n    if (linePercentage >= MINIMUM_LINE_THRESHOLD) {\n      const line = this.group.selectAll('line').data([this], (d) => {\n        return d.id;\n      });\n      line.enter().append('line').attr('x1', () => {\n        if (linePairs[0][0] <= this.plot.axes.xScale.range()[0]) {\n          return this.plot.axes.xScale.range()[0];\n        }\n        if (linePairs[0][0] >= this.plot.axes.xScale.range()[1]) {\n          return null;\n        }\n        return linePairs[0][0];\n      }).attr('y1', linePairs[0][1]).attr('x2', () => {\n        if (linePairs[1][0] >= this.plot.axes.xScale.range()[1]) {\n          return this.plot.axes.xScale.range()[1];\n        }\n        if (linePairs[1][0] <= this.plot.axes.xScale.range()[0]) {\n          return null;\n        }\n        return linePairs[1][0];\n      }).attr('y2', linePairs[1][1]).attr('stroke-width', () => {\n        let height = this.h;\n        height = Math.ceil((height * (linePercentage / 100)) + height);\n        if (height < MINIMUM_LINE_STROKE) {\n          return MINIMUM_LINE_STROKE;\n        }\n        return height;\n      }).attr('stroke', this.f);\n      line.attr('x1', () => {\n        if (linePairs[0][0] <= this.plot.axes.xScale.range()[0]) {\n          return this.plot.axes.xScale.range()[0];\n        }\n        if (linePairs[0][0] >= this.plot.axes.xScale.range()[1]) {\n          return null;\n        }\n        return linePairs[0][0];\n      }).attr('y1', linePairs[0][1]).attr('x2', () => {\n        if (linePairs[1][0] >= this.plot.axes.xScale.range()[1]) {\n          return this.plot.axes.xScale.range()[1];\n        }\n        if (linePairs[1][0] <= this.plot.axes.xScale.range()[0]) {\n          return null;\n        }\n        return linePairs[1][0];\n      }).attr('y2', linePairs[1][1]).attr('stroke-width', () => {\n        let height = this.h;\n        height = Math.ceil((height * (linePercentage / 100)) + height);\n        if (height < MINIMUM_LINE_STROKE) {\n          return MINIMUM_LINE_STROKE;\n        }\n        return height;\n      });\n    } else {\n      this.group.selectAll('line').remove();\n    }\n    const endPoint = this.filteredOrderedPair([this.plot.axes.xScale(this.w), this.plot.axes.yScale(this.y)]);\n    if (linePercentage >= MINIMUM_LINE_THRESHOLD) {\n      if (endPoint[0] !== null && endPoint[1] !== null) {\n        const end = this.group.selectAll('.end-circle').data([this], (d) => {\n          return d.id;\n        });\n        end.enter().append('circle').attr('class', 'end-circle').attr('cx', endPoint[0]).attr('cy', endPoint[1]).attr('r', () => {\n          let radius = this.r;\n          radius = Math.ceil(((radius * linePercentage) / 100) + radius);\n          if (radius < MINIMUM_CIRCLE_RADIUS) {\n            radius = MINIMUM_CIRCLE_RADIUS;\n          }\n          return radius;\n        }).style('fill', this.f);\n        end.attr('class', 'end-circle').attr('cx', endPoint[0]).attr('cy', endPoint[1]).attr('r', () => {\n          let radius = this.r;\n          radius = Math.ceil(((radius * linePercentage) / 100) + radius);\n          if (radius < MINIMUM_CIRCLE_RADIUS) {\n            radius = MINIMUM_CIRCLE_RADIUS;\n          }\n          return radius;\n        });\n      } else {\n        this.group.selectAll('.end-circle').remove();\n      }\n    } else {\n      this.group.selectAll('.end-circle').remove();\n    }\n    return this;\n  }\n\n  /*\n  * detached - builds a detached svg group and returns the node\n  * @return {object} node, the SVG node to append to the parent during .call()\n  */\n  detached() {\n    this.remove();\n    this.group = d3.select(document.createElementNS(d3.namespaces.svg, 'g')).attr('id', this.id).attr('class', 'node').attr('opacity', this.o).remove();\n    this.update();\n    this.group.node();\n  }\n\n  /*\n  * distance - determine the distance between two pairs\n  */\n  distance(pairs) {\n    return Math.sqrt(Math.pow(Math.abs(pairs[0][0] - pairs[1][0]), 2) + Math.pow(Math.abs(pairs[0][1] - pairs[1][1]), 2));\n  }\n\n  /*\n  * groupOverlappingSegments - group overlapping segments together\n  * @param {array} segments, an array of SegmentNode's\n  * @return {object} groups, groups of overlapping segments\n  */\n  static groupOverlappingSegments(segments) {\n    const groups = {};\n    const segmentsByHeightAndCumulative = _.groupBy(segments, (segment) => {\n      let c = false;\n      if (typeof segment.meta.cumulative === 'undefined') {\n        c = false;\n      } else {\n        c = segment.meta.cumulative;\n      }\n      return `${segment.y}:${c}`;\n    });\n    Object.keys(segmentsByHeightAndCumulative).forEach((key) => {\n      const values = segmentsByHeightAndCumulative[key];\n      values.sort((a, b) => {\n        return a.x - b.x;\n      });\n      let i = 0;\n      const points = [];\n      while (i < values.length) {\n        if (i === 0) {\n          points[0] = values[0];\n          const groupName = `${values[0].w}:${key}`;\n          groups[groupName] = [values[0]];\n          i++;\n          continue; // eslint-disable-line no-continue\n        }\n        const lastIdx = points.length - 1;\n        if (lastIdx < 0) {\n          break;\n        }\n        const lastPoint = points[lastIdx];\n        if (values[i].x >= lastPoint.x && values[i].w <= lastPoint.w) {\n          const groupName = `${lastPoint.w}:${key}`;\n          let group = groups[groupName];\n          if (typeof group === 'undefined') {\n            group = [];\n          }\n          group.push(values[i]);\n          i++;\n        } else {\n          points[lastIdx + 1] = values[i];\n          const groupName = `${values[i].w}:${key}`;\n          groups[groupName] = [values[i]];\n          i++;\n        }\n      }\n    });\n    return groups;\n  }\n}\n\n\nmodule.exports = SegmentNode;\n\n\n\n// WEBPACK FOOTER //\n// ./src/nodes/SegmentNode.js","const d3 = require('d3');\nconst _ = require('underscore');\n\nimport Axes from './Axes';\nimport Tooltip from './Tooltip';\nimport Zoom from './Zoom';\nimport Group from './groups/Group';\nimport { InvalidGroupError } from './Errors';\n\n\nconst MINIMUM_CHART_HEIGHT = 300;\n\nclass Chart {\n  /*\n  * Chart - creates a new instance of a chart\n  * @param {object} options, the options to create a chart\n  * @param {string} containerID, the id of the container div\n  * @param {string} svgcontainerClass, the desired class of the constructed svg element\n  * @param {object} tooltip,\n  * @param {number} tooltip.opacity, the background opacity for the tooltip\n  * @param {object} tooltip.template, the compiled template\n  * @param {boolean} scale, scale the svg on window resize @default false\n  * @param {boolean} resize, resize the svg on window resize @default true\n  * @returns {object} this, returns self\n  */\n  constructor(options) {\n    this.options = options;\n    this.drawn = false;\n    this.filters = options.filters || {};\n    this.groups_ = {};\n    return this;\n  }\n\n  /*\n  * init - method to initialize the chart, allows the chart to be re-initialized\n  *  on resize while keeping the current chart data in memory\n  * @returns {object} this\n  */\n  init() {\n    this.setDimensions();\n    const scale = this.options.scale || false;\n    if (scale) {\n      this.root = d3.select(`#${this.options.containerID}`).append('svg').attr('viewBox', `0 0 ${this.viewBoxWidth} ${this.viewBoxHeight}`).attr('preserveAspectRatio', 'xMinYMin meet');\n    } else {\n      this.root = d3.select(`#${this.options.containerID}`).append('svg').attr('width', this.viewBoxWidth).attr('height', this.viewBoxHeight);\n    }\n    this.container = this.root.append('g').attr('class', this.options.svgContainerClass).attr('width', this.getWidth()).attr('height', this.getHeight()).attr('transform', `translate(${this.margins.left}, ${this.margins.top})`);\n    this.axes = new Axes(this, this.options.axes);\n    this.tooltip = new Tooltip(this, this.options);\n    const zoomEnabled = this.options.zoom || false;\n    if (zoomEnabled) {\n      this.zoom = new Zoom(this, this.options);\n    }\n    this.groups = this.container.append('g').attr('class', 'd3cf-groups').attr('transform', `translate(${this.margins.left}, 0)`);\n    // this.update([]);\n    return this;\n  }\n\n  /*\n  * setDimensions - method to set the dimensions of the chart based on the current window\n  */\n  setDimensions() {\n    this.margins = this.options.margins || {\n      left: 40,\n      right: 20,\n      top: 20,\n      bottom: 40,\n    };\n    this.width = this.options.width || document.getElementById(this.options.containerID).offsetWidth - (this.margins.left + this.margins.right);\n    this.height = this.options.height;\n    if (this.height < MINIMUM_CHART_HEIGHT) {\n      this.height = MINIMUM_CHART_HEIGHT;\n    }\n    this.viewBoxWidth = this.width + this.margins.left + this.margins.right;\n    this.viewBoxHeight = this.height + this.margins.top + this.margins.bottom;\n    return this;\n  }\n\n  /*\n  * update - update the width and height attributes of the root and container\n  *  elements. then call update on the chart axes\n  * @param {array} nodes, an array of {object} for each node\n  * @returns {object} this\n  */\n  update(nodes) {\n    this.setDimensions();\n    this.root.attr('width', this.viewBoxWidth).attr('height', this.viewBoxHeight);\n    this.container.attr('width', this.width).attr('height', this.height).attr('transform', `translate(${this.margins.left}, ${this.margins.top})`);\n    if (typeof nodes === 'undefined') {\n      this.axes.update(this.getGroupsNodes(), false);\n    } else {\n      if (nodes instanceof Array) {\n        this.axes.update(nodes, true);\n        if (this.axes.initialized === true) {\n          this.axes.setInitialMinMax(this.axes.currentMinMax);\n        }\n      } else {\n        const shouldSetInitialMinMax = this.mergeGroups(nodes);\n        this.axes.update(this.getGroupsNodes(false), true);\n        if (shouldSetInitialMinMax) {\n          this.axes.setInitialMinMax(this.axes.currentMinMax);\n        }\n      }\n    }\n    return this;\n  }\n\n  /*\n  * draw - draws the markers on the chart\n  * @note this will automatically show/hide a warning message if the data\n  * is empty. Do not call super() to override this behavior.\n  * @param {array} nodes, an array of {object} for each marker\n  */\n  draw(nodes) {\n    if (!this.drawn) {\n      this.drawn = true;\n      this.root.transition().style('opacity', 1);\n    }\n    if (typeof nodes === 'undefined') {\n      if (this.getGroupsSize() <= 0) {\n        this.showWarn();\n        return;\n      }\n    } else {\n      if (nodes instanceof Array) {\n        const group = this.defaultGroup(nodes);\n        if (group.size() <= 0) {\n          this.showWarn();\n          return;\n        }\n      } else {\n        if (this.getGroupsSize() <= 0) {\n          this.showWarn();\n          return;\n        }\n      }\n    }\n    this.removeWarn();\n  }\n\n  /*\n  * defaultGroup - creates a default group if an array is passed to the draw method\n  * @param {array} nodes, an array of Node's\n  */\n  defaultGroup() {\n    throw new Error('defaultGroup must be implemented.');\n  }\n\n  /*\n  * applyFilters - apply any filters from the chart\n  * @param {object} filters, an array of filters to apply\n  * @returns {array} filtered, the filtered data\n  */\n  applyFilters(nodes, filters) {\n    const filters_ = filters || this.filters;\n    let filtered = [];\n    if (nodes) {\n      filtered = nodes.filter((d) => {\n        let valid = true;\n        const keys = Object.keys(filters_);\n        let i = 0;\n        const keysLen = keys.length;\n        while (i < keysLen) {\n          const key = keys[i++];\n          const f = filters_[key](d);\n          if (typeof f === 'undefined') {\n            valid = false;\n            break;\n          }\n        }\n        if (valid) {\n          return d;\n        }\n      });\n    }\n    return filtered;\n  }\n\n  /*\n  * getWidth\n  * @return {number} width (excluding margins) for the root svg\n  */\n  getWidth() {\n    return this.width - (this.margins.left + this.margins.right);\n  }\n\n  /*\n  * getHeigth\n  * @return {number} width (excluding margins) for the root svg\n  */\n  getHeight() {\n    return this.height - (this.margins.top + this.margins.bottom);\n  }\n\n  /*\n  * showWarn - shows a warning message in the center of the chart\n  * @param {string} m, the message to display\n  * @return {object} this\n  */\n  showWarn(m) {\n    const message = m || 'No data to display';\n    if (this.warn) {\n      this.removeWarn();\n    }\n    this.warn = this.container.append('g').style('opacity', 0).attr('class', 'd3cf-warn');\n    this.warn.append('text').attr('text-anchor', 'middle').attr('x', this.width / 2).attr('y', this.getHeight() / 2).text(message);\n    this.warn.transition().style('opacity', 1);\n    return this;\n  }\n\n  /*\n  * removeWarn - removes the warning message from the chart\n  * @return {object} this\n  */\n  removeWarn() {\n    if (this.warn) {\n      this.warn.remove();\n    }\n    return this;\n  }\n\n  /*\n  * remove - removes the chart from the DOM and any event listeners\n  * @return {object} this\n  */\n  remove() {\n    this.zoom.remove();\n    this.tooltip.remove();\n    this.axes.remove();\n    this.container.remove();\n    this.root.remove();\n  }\n\n  /*\n  * destroy - destroys the chart and any associated elements\n  */\n  destroy() {\n    this.remove();\n    this.zoom = null;\n    this.tooltip = null;\n    this.axes = null;\n    this.container = null;\n    this.root = null;\n    this.resizeHandler = null;\n  }\n\n  /*\n  * addGroup\n  * @param {object} group, add a group to the chart\n  * @throws {InvalidGroupError} error\n  * @return {Chart} this\n  */\n  addGroup(group) {\n    if (group instanceof Group === false) {\n      throw new InvalidGroupError();\n    }\n    this.groups_[group.id] = group;\n    return this;\n  }\n\n  /*\n  * removeGroup\n  * @param {string} id, the group to remove\n  * @return {Chart} this\n  */\n  removeGroup(id) {\n    if (this.groups_.hasOwnProperty(id)) {\n      delete this.groups_[id];\n    }\n    return this;\n  }\n\n  /*\n  * getGroups - returns the groups associated with this chart\n  * @return {array} groups, the groups associated with this chart\n  */\n  getGroups() {\n    return Object.values(this.groups_);\n  }\n\n  /*\n  * getGroups - returns the size of all the groups\n  * @param {boolean} shouldFilter, should the nodes be filtered by domain\n  * @return {Number} size, the size of all the groups\n  */\n  getGroupsSize(shouldFilter) {\n    return this.getGroups().reduce((prev, nextObj) => {\n      if (shouldFilter) {\n        return prev + this.applyFilters(nextObj.getNodes()).length;\n      }\n      const filters = Object.assign({}, this.filters);\n      if (filters.hasOwnProperty('_domain')) {\n        delete filters._domain;\n      }\n      return prev + this.applyFilters(nextObj.getNodes(), filters).length;\n    }, 0);\n  }\n\n  /*\n  * getGroupsNodes - returns all the nodes for each group\n  * @param {boolean} shouldFilter, should the nodes be filtered by domain\n  * @return {array} nodes, an array of nodes\n  */\n  getGroupsNodes(shouldFilter) {\n    return this.getGroups().reduce((prevArr, nextObj) => {\n      if (shouldFilter) {\n        return prevArr.concat(this.applyFilters(nextObj.getNodes()));\n      }\n      const filters = Object.assign({}, this.filters);\n      if (filters.hasOwnProperty('_domain')) {\n        delete filters._domain;\n      }\n      return prevArr.concat(this.applyFilters(nextObj.getNodes(), filters));\n    }, []);\n  }\n\n  /*\n  * mergeGroups - merge groups from data passed directly to the draw method\n  * @param {object} nodes, a grouping of nodes\n  * @return {boolean} shouldReset, should the axes domain be reset to currentMinMax\n  */\n  mergeGroups() {\n    throw new Error('mergeGroups must be implemented.');\n  }\n\n  /*\n  * addFilter - add a filter to the chart\n  * @param {string} name, the name of the filter\n  * @param {function} fn, the function to be applied to the data\n  * @return {object} this\n  */\n  addFilter(name, fn) {\n    this.filters[name] = _.bind(fn, this);\n    return this;\n  }\n\n  /*\n  * removeFilter - removes a filter from the chart\n  * @param {string} name, the name of the filter\n  * @return {object} this\n  */\n  removeFilter(name) {\n    if (this.filters[name] !== 'undefined') {\n      delete this.filters[name];\n    }\n    return this;\n  }\n\n  /*\n  * resetZoom - resets the zoom of the axes\n  */\n  resetZoom() {\n    if (this.zoom) {\n      return this.zoom.reset();\n    }\n  }\n}\n\n\nmodule.exports = Chart;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Chart.js","const d3 = require('d3');\nconst _ = require('underscore');\n\nclass Tooltip {\n  /*\n  * Tooltip - allows for an HTML div to be faded in/out on mouseover of a marker\n  * @param {object} plot, the plot append the tooltip\n  * @param {object} options, the options for the plot\n  * @param {object} options.tooltip, the options for the tooltip\n  * @param {number} options.opacity, the opacity of the tooltip\n  * @param {object} options.template, an underscore compiled template\n  * @return {object} this\n  */\n  constructor(plot, options) {\n    this.tooltipOpts = options.tooltip || {\n      'opacity': 1,\n      'template': _.template('<span style=\"font-weight: bold;\"><%= obj.id %></span><p>x1: <%= obj.x1 %> x2: <% if (obj.x2) { %> <%= obj.x2 %> <% } %> y: <%= obj.y1 %></p>'),\n    };\n    this.template = this.tooltipOpts.template || _.template('<span style=\"font-weight: bold;\"><%= obj.id %></span><p>x1: <%= obj.x1 %> x2: <%= obj.x2 %> y: <%= obj.y1 %></p>');\n    this.opacity = this.tooltipOpts.opacity || 1;\n    this.element = d3.select('body').append('div').attr('class', 'd3cf-tooltip').style('opacity', 0).html(this.template({}));\n    return this;\n  }\n\n  /*\n  * mouseover - unbound method for mouseover event\n  * @param {object} d, the data\n  * @param {number} x, the x coordinate\n  * @param {number} y, the y coordinate\n  * @return {object} this\n  */\n  mouseover(d, x, y) {\n    const box = this.element.node().getBoundingClientRect();\n    if ((x + box.width) >= (window.innerWidth - 20)) {\n      this.element.html(this.template(d)).style('left', `${((x - 10) - Math.floor(box.width))}px`).style('top', `${y}px`);\n    } else {\n      this.element.html(this.template(d)).style('left', `${(x + 10)}px`).style('top', `${y}px`);\n    }\n    this.element.transition().duration(200).style('opacity', this.opacity);\n    return this;\n  }\n\n  /*\n  * mouseout - unbound method for mouseout event\n  * @return {object} this\n  */\n  mouseout() {\n    this.element.transition().duration(500).style('opacity', 0);\n    return this;\n  }\n\n  /*\n  * remove - removes the element from the DOM\n  */\n  remove() {\n    return this.element.remove();\n  }\n}\n\nmodule.exports = Tooltip;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Tooltip.js","const d3 = require('d3');\nconst _ = require('underscore');\n\nconst MINIMUM_ZOOM_THRESHOLD = 5;\n\nclass Zoom {\n  /*\n  * Zoom - a zoomable interface for a plot\n  * @param {object} plot, the plot to enable the zooming interface\n  * @param {object} options, the object containing the passed in options to the plot constructor\n  * @return {object} this\n  */\n  constructor(plot, options) {\n    this.plot = plot;\n    this.options = options;\n    this.bandPos = [-1, -1];\n    this.zoomArea = {\n      x1: 0,\n      y1: 0,\n      x2: 0,\n      y2: 0,\n    };\n    this.drag = d3.drag();\n    this.zoomGroup = plot.container.append('g').attr('class', 'd3cf-zoom');\n    this.zoomBand = this.zoomGroup.append('rect').attr('width', 0).attr('height', 0).attr('x', 0).attr('y', 0).attr('class', 'd3cf-zoomBand');\n    this.zoomOverlay = this.zoomGroup.append('rect').attr('width', plot.getWidth()).attr('height', plot.getHeight()).attr('transform', `translate(${plot.margins.left}, 0)`).attr('class', 'd3cf-zoomOverlay').call(this.drag);\n    this.isZoomed = false;\n    const self = this; // eslint-disable-line consistent-this\n    this.drag.on('start.plot', function() { // eslint-disable-line func-names\n      // Note: @ (this) is not the Zoom class but the DOM event\n      const pos = d3.mouse(this); // eslint-disable-line no-invalid-this\n      self.dragStart = pos;\n    });\n    this.drag.on('drag.plot', function() { // eslint-disable-line func-names\n      // Note: @ (this) is not the Zoom class but the DOM event\n      const pos = d3.mouse(this); // eslint-disable-line no-invalid-this\n      _.bind(self.ondrag, self)(pos);\n    });\n    this.drag.on('end.plot', function() { // eslint-disable-line func-names\n      // Note: @ (this) is not the Zoom class but the DOM event\n      const pos = d3.mouse(this); // eslint-disable-line no-invalid-this\n      let zoomX = false;\n      if (Math.abs(self.dragStart[0] - pos[0]) > MINIMUM_ZOOM_THRESHOLD) {\n        zoomX = true;\n      }\n      let zoomY = false;\n      if (Math.abs(self.dragStart[1] - pos[1]) > MINIMUM_ZOOM_THRESHOLD) {\n        zoomY = true;\n      }\n      _.bind(self.ondragend, self)(pos, zoomX && zoomY);\n    });\n  }\n\n  /*\n  * ondrag - the event handler for the ondrag event\n  * @param {array} pos, the x,y position of the mouse\n  */\n  ondrag(pos) {\n    if (pos[0] < this.bandPos[0]) {\n      this.zoomBand.attr('transform', `translate(${(pos[0] + this.plot.margins.left)}, ${this.bandPos[1]})`);\n    }\n    if (pos[1] < this.bandPos[1]) {\n      this.zoomBand.attr('transform', `translate(${(pos[0] + this.plot.margins.left)}, ${pos[1]})`);\n    }\n    if (pos[1] < this.bandPos[1] && pos[0] > this.bandPos[0]) {\n      this.zoomBand.attr('transform', `translate(${(this.bandPos[0] + this.plot.margins.left)}, ${pos[1]})`);\n    }\n    if (this.bandPos[0] === -1) {\n      this.bandPos = pos;\n      this.zoomBand.attr('transform', `translate(${(this.bandPos[0] + this.plot.margins.left)}, ${this.bandPos[1]})`);\n    }\n    this.zoomBand.transition().duration(1).attr('width', Math.abs(this.bandPos[0] - pos[0])).attr('height', Math.abs(this.bandPos[1] - pos[1]));\n  }\n\n  /*\n  * ondragend - the event handler for the ondragend event\n  * @param {array} pos, the x,y position of the mouse\n  */\n  ondragend(pos, zoom) {\n    const x1 = this.plot.axes.xScale.invert(this.bandPos[0]);\n    const x2 = this.plot.axes.xScale.invert(pos[0]);\n    if (x1 < x2) {\n      this.zoomArea.x1 = x1;\n      this.zoomArea.x2 = x2;\n    } else {\n      this.zoomArea.x1 = x2;\n      this.zoomArea.x2 = x1;\n    }\n    const y1 = this.plot.axes.yScale.invert(pos[1]);\n    const y2 = this.plot.axes.yScale.invert(this.bandPos[1]);\n    if (y1 < y2) {\n      this.zoomArea.y1 = y1;\n      this.zoomArea.y2 = y2;\n    } else {\n      this.zoomArea.y1 = y2;\n      this.zoomArea.y2 = y1;\n    }\n    this.bandPos = [-1, -1];\n    this.zoomBand.transition().attr('width', 0).attr('height', 0).attr('x', this.bandPos[0]).attr('y', this.bandPos[1]);\n    if (zoom) {\n      this.zoom();\n    }\n  }\n\n  /*\n  * zoom - the zooming method called an the end of ondragend\n  */\n  zoom() {\n    this.isZoomed = true;\n    this.plot.axes.zoom(this.zoomArea);\n    this.plot.draw();\n  }\n\n  /*\n  * resetZoom - reset the plot zoom back to the original viewBox\n  */\n  reset() {\n    this.isZoomed = false;\n    this.plot.axes.reset();\n    this.plot.draw();\n  }\n\n  /*\n  * remove - remove the zoom interface from a plot\n  */\n  remove() {\n    this.zoomGroup.remove();\n    this.drag.on('drag.plot', null);\n    this.drag.on('end.plot', null);\n    this.drag.on('start.plot', null);\n  }\n}\n\n\nmodule.exports = Zoom;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Zoom.js","const _ = require('underscore');\n\nimport Chart from './Chart';\nimport NodeGroup from './groups/NodeGroup';\n\n\nclass ScatterPlot extends Chart {\n  /*\n  * ScatterPlot - constructs the root SVG element to contain the ScatterPlot\n  * @param {object} options, the options to create a ScatterPlot\n  * @param {string} containerID, the id of the ScatterPlot container div\n  * @param {string} svgcontainerClass, the desired class of the constructed svg element\n  * @param {object} tooltip,\n  * @param {number} tooltip.opacity, the background opacity for the tooltip\n  * @param {object} tooltip.template, the compiled template\n  * @param {boolean} scale, scale the svg on window resize @default false\n  * @param {boolean} resize, resize the svg on window resize @default true\n  * @returns {object} this, returns self\n  */\n  constructor(options) {\n    super(options);\n    this.init();\n    return this;\n  }\n\n  /*\n  * init - method to set/re-set the resizeHandler\n  * @returns {object} this\n  */\n  init() {\n    super.init();\n    const resizeEnabled = this.options.resize || true;\n    if (resizeEnabled) {\n      this.resizeHandler = _.debounce(_.bind(this.resize, this), 500);\n      return window.addEventListener('resize', this.resizeHandler);\n    }\n  }\n\n  /*\n  * draw - draw using d3 select.data.enter workflow\n  * @param {array} data, an array of {object} for each marker\n  * @returns {object} this\n  */\n  draw(data) {\n    super.draw(data);\n    const groups = this.groups.selectAll('.group').data(this.getGroups(), (d) => {\n      return d.id;\n    });\n    groups.enter().append((group) => {\n      return group.detached();\n    });\n    groups.each((group) => {\n      return group.update();\n    });\n    groups.exit().remove();\n    return this;\n  }\n\n  /*\n  * defaultGroup - creates a default group if an array is passed to the draw method\n  * @param {array} nodes, an array of Node's\n  */\n  defaultGroup(nodes) {\n    let group = this.getGroups().find((g) => {\n      return g.id === 'default_';\n    });\n    if (typeof group === 'undefined') {\n      if (this.options.group && this.options.group.onEnter) {\n        group = new NodeGroup(this, {id: 'default_', onEnter: this.options.group.onEnter});\n      } else {\n        group = new NodeGroup(this, {id: 'default_'});\n      }\n    }\n    nodes.forEach((d) => {\n      return group.addNode(d);\n    });\n    return group;\n  }\n\n  /*\n  * mergeGroups - merge groups from data passed directly to the draw method\n  * @param {object} groups, a set of Groups\n  * @return {boolean} shouldReset, should the axes domain be reset to currentMinMax\n  */\n  mergeGroups(groups) {\n    const notMerged = Object.keys(this.groups_);\n    let addedNewGroup = false;\n    Object.keys(groups).forEach((k) => {\n      let idx = -1;\n      let group = this.groups_[k];\n      if (typeof group === 'undefined') {\n        addedNewGroup = true;\n        if (groups[k] instanceof NodeGroup) {\n          group = groups[k];\n          this.addGroup(group);\n        } else {\n          // TODO: allow the user to pass in an object with `data` array\n          throw new Error('Must be instance of a d3cf Group.');\n        }\n      } else {\n        idx = notMerged.indexOf(k);\n        if (idx >= 0) {\n          notMerged.splice(idx, 1);\n          // merge new group data into the existing group\n          groups[k].getNodes().forEach((n) => {\n            group.addNode(n);\n          });\n        }\n      }\n    });\n    // remove the groups that have not been sliced\n    if (notMerged.length > 0) {\n      notMerged.forEach((k) => {\n        this.removeGroup(k);\n      });\n      // if we have removed an existing group from the plot\n      // then we should set the axes to the currentMinMax\n      return true;\n    }\n    // if we have merged in new groups and the axes have been initialized\n    // then we should set the axes to the currentMinMax\n    if (addedNewGroup && this.axes.initialized === true) {\n      return true;\n    }\n    // do not set the axes\n    return false;\n  }\n\n  /*\n  * update the dimensions of the plot (axes, gridlines, then redraw)\n  * @param {array} data, an array of {object} for each marker\n  * @returns {object} this\n  */\n  update(data) {\n    super.update(data);\n    this.draw(data);\n    return this;\n  }\n\n  /*\n  * remove - removes the plot from the DOM and any event listeners\n  * @return {object} this\n  */\n  remove() {\n    if (this.resizeHandler) {\n      window.removeEventListener('resize', this.resizeHandler);\n    }\n    return this;\n  }\n\n  /*\n  * resize - re-renders the plot\n  * @return {object} this\n  */\n  resize() {\n    this.update();\n    return this;\n  }\n\n  /*\n  * resetZoom - resets the zoom of the axes\n  */\n  resetZoom() {\n    if (this.zoom) {\n      return this.zoom.reset();\n    }\n  }\n}\n\n\nmodule.exports = ScatterPlot;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ScatterPlot.js","const _ = require('underscore');\n\nimport Chart from './Chart';\nimport LineGroup from './groups/LineGroup';\n\n\nclass LineChart extends Chart {\n  /*\n  * LineChart - constructs the root SVG element to contain the LineChart\n  * @param {object} options, the options to create a LineChart\n  * @param {string} containerID, the id of the LineChart container div\n  * @param {string} svgcontainerClass, the desired class of the constructed svg element\n  * @param {object} tooltip,\n  * @param {number} tooltip.opacity, the background opacity for the tooltip\n  * @param {object} tooltip.template, the compiled template\n  * @param {boolean} scale, scale the svg on window resize @default false\n  * @param {boolean} resize, resize the svg on window resize @default true\n  * @returns {object} this, returns self\n  */\n  constructor(options) {\n    super(options);\n    this.init();\n    return this;\n  }\n\n  /*\n  * init - method to set/re-set the resizeHandler\n  * @returns {object} this\n  */\n  init() {\n    super.init();\n    const resizeEnabled = this.options.resize || true;\n    if (resizeEnabled) {\n      this.resizeHandler = _.debounce(_.bind(this.resize, this), 500);\n      return window.addEventListener('resize', this.resizeHandler);\n    }\n  }\n\n  /*\n  * draw - draw using d3 select.data.enter workflow\n  * @param {array} data, an array of {object} for each marker\n  * @returns {object} this\n  */\n  draw(data) {\n    super.draw(data);\n    const groups = this.groups.selectAll('.group').data(this.getGroups(), (d) => {\n      return d.id;\n    });\n    groups.enter().append((group) => {\n      return group.detached();\n    });\n    groups.each((group) => {\n      return group.update();\n    });\n    groups.exit().remove();\n    return this;\n  }\n\n  /*\n  * defaultGroup - creates a default group if an array is passed to the draw method\n  * @param {array} nodes, an array of Node's\n  */\n  defaultGroup(nodes) {\n    let group = this.getGroups().find((g) => {\n      return g.id === 'default_';\n    });\n    if (typeof group === 'undefined') {\n      if (this.options.group && this.options.group.onEnter) {\n        group = new LineGroup(this, {id: 'default_', onEnter: this.options.group.onEnter});\n      } else {\n        group = new LineGroup(this, {id: 'default_'});\n      }\n    }\n    nodes.forEach((d) => {\n      return group.addNode(d);\n    });\n    return group;\n  }\n\n  /*\n  * mergeGroups - merge groups from data passed directly to the draw method\n  * @override\n  * @param {object} groups, a set of Groups\n  * @return {boolean} shouldReset, should the axes domain be reset to currentMinMax\n  */\n  mergeGroups(groups) {\n    const notMerged = Object.keys(this.groups_);\n    let addedNewGroup = false;\n    Object.keys(groups).forEach((k) => {\n      let idx = -1;\n      let group = this.groups_[k];\n      if (typeof group === 'undefined') {\n        addedNewGroup = true;\n        if (groups[k] instanceof LineGroup) {\n          group = groups[k];\n          this.addGroup(group);\n        } else {\n          // TODO: allow the user to pass in an object with `data` array\n          throw new Error('Must be instance of a d3cf Group.');\n        }\n      } else {\n        idx = notMerged.indexOf(k);\n        if (idx >= 0) {\n          notMerged.splice(idx, 1);\n          // merge new group data into the existing group\n          groups[k].getNodes().forEach((n) => {\n            group.addNode(n);\n          });\n        }\n      }\n    });\n    // remove the groups that have not been sliced\n    if (notMerged.length > 0) {\n      notMerged.forEach((k) => {\n        this.removeGroup(k);\n      });\n      // if we have removed an existing group from the plot\n      // then we should set the axes to the currentMinMax\n      return true;\n    }\n    // if we have merged in new groups and the axes have been initialized\n    // then we should set the axes to the currentMinMax\n    if (addedNewGroup && this.axes.initialized === true) {\n      return true;\n    }\n    // do not set the axes\n    return false;\n  }\n\n  /*\n  * update the dimensions of the chart (axes, gridlines, then redraw)\n  * @param {array} data, an array of {object} for each marker\n  * @returns {object} this\n  */\n  update(data) {\n    super.update(data);\n    this.draw(data);\n    return this;\n  }\n\n  /*\n  * remove - removes the chart from the DOM and any event listeners\n  * @return {object} this\n  */\n  remove() {\n    super.remove();\n    if (this.resizeHandler) {\n      window.removeEventListener('resize', this.resizeHandler);\n    }\n    return this;\n  }\n\n  /*\n  * resize - re-renders the chart\n  * @return {object} this\n  */\n  resize() {\n    this.update();\n    return this;\n  }\n}\n\n\nmodule.exports = LineChart;\n\n\n\n// WEBPACK FOOTER //\n// ./src/LineChart.js"],"sourceRoot":""}